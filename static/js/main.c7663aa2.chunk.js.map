{"version":3,"sources":["components/burger-ingredients-container/burger-ingredients-container.module.css","components/modal-overlay/modal-overlay.module.css","components/order-details/order-details.module.css","components/order-container/order-container.module.css","pages/profile/profile.module.css","components/order-card-details/order-card-details.module.css","services/hooks.ts","utils/cookies.ts","utils/api.ts","utils/utils.ts","services/constants/burger-ingredients.ts","services/actions/burger-ingredients.ts","services/constants/auth.ts","services/actions/auth.ts","components/navigation-element/navigation-element.tsx","components/app-header/app-header.tsx","services/constants/ingredient-details.ts","components/ingredient-card/ingredient-card.tsx","services/actions/ingredient-details.ts","components/burger-ingredients-container/burger-ingredients-container.tsx","components/burger-ingredients/burger-ingredients.tsx","services/constants/burger-constructor.ts","components/burger-constructor-element/burger-constructor-element.tsx","services/actions/burger-constructor.ts","images/close-icon.svg","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","images/done.gif","components/order-details/order-details.tsx","services/constants/order-data.ts","services/actions/order-data.ts","services/constants/order-details.ts","components/burger-constructor/burger-constructor.tsx","services/actions/order-details.ts","components/protected-route/protected-route .tsx","services/constants/order-ingredients.ts","components/order-card-details/order-card-details.tsx","services/actions/order-ingredients.ts","pages/log-in/log-in.tsx","pages/registration/registration.tsx","pages/password-recovery/password-recovery.tsx","pages/password-updating/password-updating.tsx","services/constants/ws.ts","services/actions/wsActionTypes.ts","components/order-card/order-card.tsx","components/order-container/order-container.tsx","pages/profile/profile.tsx","components/ingredient-details/ingredient-details.tsx","pages/feed/feed.tsx","components/modal-switch/modal-switch.tsx","components/app/app.tsx","reportWebVitals.ts","services/middleware/socketMiddleware.ts","services/reducers/burger-ingredients.ts","services/reducers/ingredient-details.ts","services/reducers/order-details.ts","services/reducers/burger-constructor.ts","services/reducers/order-data.ts","services/reducers/auth.ts","services/reducers/wsReducer.ts","services/reducers/index.ts","services/store.ts","index.tsx","pages/feed/feed.module.css","components/order-card/order-card.module.css","components/burger-ingredients/burger-ingredients.module.css","components/ingredient-details/ingredient-details.module.css","components/burger-constructor/burger-constructor.module.css","components/modal-switch/app.module.css","components/app-header/app-header.module.css","components/ingredient-card/ingredient-card.module.css","components/burger-constructor-element/burger-constructor-element.module.css","components/navigation-element/navigation-element.module.css","pages/log-in/log-in.module.css","components/modal/modal.module.css","pages/registration/registration.module.css","pages/password-recovery/password-recovery.module.css","pages/password-updating/password-updating.module.css"],"names":["module","exports","useSelector","selectorHook","useDispatch","dispatchHook","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","deleteCookie","ENDPOINT","AUTH_ENDPOINT","WS_ENDPOINT","ORDER_ENDPOINT","parseDay","createdAt","createdAtMonth","Number","slice","createdAtDay","currentDate","result","getMonth","getDate","getDay","checkResponse","res","ok","Error","status","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_ERROR","getBurgerIngredients","dispatch","type","fetch","then","json","data","ingredientsData","payload","catch","e","console","log","message","response","REGISTRATION_REQUEST","REGISTRATION_SUCCESS","REGISTRATION_ERROR","AUTHORIZATION_REQUEST","AUTHORIZATION_SUCCESS","AUTHORIZATION_ERROR","PASSWORD_RECOVERY_REQUEST","PASSWORD_RECOVERY_SUCCESS","PASSWORD_RECOVERY_ERROR","PASSWORD_UPDATING_REQUEST","PASSWORD_UPDATING_SUCCESS","PASSWORD_UPDATING_ERROR","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_ERROR","GET_USER_INFO_REQUEST","GET_USER_INFO_SUCCESS","GET_USER_INFO_ERROR","UPDATE_USER_INFO_REQUEST","UPDATE_USER_INFO_SUCCESS","UPDATE_USER_INFO_ERROR","REFRESH_TOKEN_REQUEST","REFRESH_TOKEN_SUCCESS","REFRESH_TOKEN_ERROR","getUserInfo","method","headers","Authorization","updateUserInfo","body","JSON","stringify","refreshToken","isGettingUserInfo","token","NavigationElement","icon","path","isActive","exact","iconType","className","navigationElementStyles","navigationelement","to","navElement","activeClassName","navElementActive","AppHeader","appHeaderStyles","header","header__container","header__leftlinks","header__rightlinks","SHOW_INGREDIENT_DETAILS","HIDE_INGREDIENT_DETAILS","IngredientCard","image","image_large","price","calories","proteins","fat","carbohydrates","_id","React","useState","orderCount","setOrderCount","store","sausesAndFillings","burgerConstructor","bun","useEffect","theSameIngredientsAmount","filter","ingredient","length","useDrag","item","key","uuidv4","collect","monitor","isDrag","isDragging","dragRef","draggingElementClassName","ingredientCardStyles","ingredientcard__container","onDrugging","location","useLocation","pathname","state","background","onClick","ref","count","size","src","alt","ingredientcard__price","ingredientcard__description","BurgerIngredientsContainer","reference","ingredients","burgerIngredients","id","burgerIngredientsContainerStyles","ingredientconteinercontent","cardData","map","BurgerIngredients","activeTabLink","setactiveTabLink","handleTab","refBun","useRef","refSauce","refFilling","onScroll","bunPosition","saucePosition","fillingPosition","current","getBoundingClientRect","top","Math","abs","burgerIngredientsStyles","tab","active","linkinactive","linkactive","href","ADD_INGREDIENT","DELETE_INGREDIENT","MOVE_INGREDIENTS","CLEAR_INGREDIENTS","BurgerConstructorElement","index","drag","useDrop","accept","isHover","isOver","hover","dragIndex","hoverIndex","moveIngredients","drop","burgerConstructorElementStyles","element","dpopTarget","dragIcon","text","thumbnail","handleClose","deleteIngredient","ModalOverlay","handleModalClose","children","modalOverlayStyles","modaloverlay","modalRoot","getElementById","Modal","el","createElement","onKeypress","event","appendChild","addEventListener","removeEventListener","removeChild","ReactDOM","createPortal","stopPropagation","modalStyles","modal","closeicon","closeIcon","OrderDetails","isLoading","orderData","loading","orderNumber","content","useMemo","orderDetailsStyles","orderdetails","doneGif","GET_ORDER_NUMBER_REQUEST","GET_ORDER_NUMBER_SUCCESS","GET_ORDER_NUMBER_ERROR","getOrderNumber","bodyData","accessToken","order","number","SHOW_ORDER_DETAILS","HIDE_ORDER_DETAILS","BurgerConstructor","dropTarget","isOrderDetailsActive","orderDetails","isAuth","authData","history","useHistory","bunTopIngredient","burgerConstructorStyles","isLocked","bunBottomIngredient","sausesAndFillingsIngredients","chosenIngredient","bunPrice","innerPrice","elem","reduce","sum","totalPrice","container","ingredientsconstructor","priceandconfirmation","ingredientData","ProtectedRoute","redirectTo","forAuth","addPermissionCondition","permissionFlag","render","from","GET_ORDER_INFO_REQUEST","GET_ORDER_INFO_SUCCESS","GET_ORDER_INFO_ERROR","OrderCardDetails","feedRegex","orderRegex","orderId","useParams","test","getUserOrder","ws","modalOrder","orderIngredientData","set","Set","Array","uniqueId","amount","push","ingredientsId","acc","orderCardDetailsStyles","ingredientdetails","consist","ingredientContainer","imageContainer","img","footer","LogIn","email","setEmail","password","setPassword","onSubmit","userData","preventDefault","logInStyles","logInContainer","placeholder","onChange","target","error","errorText","anchor","Registration","setName","isRegistrationSucess","registrationStyles","registrationContainer","PasswordRecovery","isPasswordRecoverySucess","emailData","toLowerCase","passwordRecoveryStyles","passwordRecoveryContainer","PasswordUpdating","setToken","inputRef","onIconClick","setTimeout","focus","alert","newPasswordData","passwordUpdatingStyles","passwordUpdatingContainer","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","WS_CONNECTION_CLOSE","wsInit","url","wsClose","wsThunkActions","wsSuccess","wsError","wsStart","wsClosed","wsGetMessage","OrderCard","ingredientsIds","ingredientsPrices","orders","orderIngredientImgData","uniqueIds","modalPathname","orderCardStyles","info","images","ingredientImg","OrderContainer","orderContainerStyles","contentColumn","Profile","storeUserEmail","storeUserName","updateUserInfoFailed","refreshTokenSucess","userEmail","setUserEmail","userName","setUserName","useRouteMatch","profileStyles","navBar","activeNavElement","logout","orderContainer","profileButtons","IngredientDetails","ingredientId","ingredientDetailsStyles","parameters","parameter","Feed","isDoneToday","messages","totalToday","isDoneAllTime","total","feedStyles","contentleft","done","statusContainer","inProgress","ModalSwitch","goBack","appStyles","DndProvider","backend","HTML5Backend","App","getUserInfoFailed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ingredientsInitialState","ingredientDetailsInitialState","iSIngredientDetailsActive","ingredientDetailsId","orderDetailsInitialState","initialState","initialStateOrder","userState","accessTokenExpired","requestToken","isRegistrationInProcess","isRegistrationFailed","isAuthorizationInProcess","isAuthorizationSucess","isAuthorizationFailed","isPasswordRecoveryInProcess","isPasswordRecoveryFailed","isPasswordUpdatingInProcess","isPasswordUpdatingSucess","isPasswordUpdatingFailed","getUserInfoInProcess","getUserInfoSucess","updateUserInfoInProcess","updateUserInfoSucess","refreshTokenInProcess","refreshTokenFailed","wsInitialState","wsConnected","isOrderInfoGettingSuccess","isOrderInfoGettingError","isOrderInfoGettingInProcess","rootReducer","combineReducers","action","update","$splice","draggingIngredient","ingredientDetails","split","user","isLogoutInProcess","isLogoutFailed","isLogoutSucess","parsedMessage","parse","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","socket","next","WebSocket","close","onopen","onerror","onmessage","onclose","createStore","StrictMode"],"mappings":"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","file":"static/js/main.c7663aa2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientconteinercontent\":\"burger-ingredients-container_ingredientconteinercontent__17ZnD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modaloverlay\":\"modal-overlay_modaloverlay__38aPd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderdetails\":\"order-details_orderdetails__ABZOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"order-container_header__1tgPo\",\"contentColumn\":\"order-container_contentColumn__252Uv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"profile_header__kytMS\",\"header__container\":\"profile_header__container__72BNl\",\"menu__item\":\"profile_menu__item__dgScm\",\"menu__list-right\":\"profile_menu__list-right__1iEwK\",\"profileButtons\":\"profile_profileButtons___LevK\",\"navBar\":\"profile_navBar__xU_jO\",\"navElement\":\"profile_navElement__2nJWu\",\"activeNavElement\":\"profile_activeNavElement__2ZUbi\",\"orderContainer\":\"profile_orderContainer__3-yOS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientdetails\":\"order-card-details_ingredientdetails__3aKWB\",\"ingredient\":\"order-card-details_ingredient__9wxou\",\"ingredientContainer\":\"order-card-details_ingredientContainer__1yzHi\",\"consist\":\"order-card-details_consist__yVKWa\",\"content\":\"order-card-details_content__2vN4w\",\"parameters\":\"order-card-details_parameters__3gvyi\",\"images\":\"order-card-details_images__2afIb\",\"imageContainer\":\"order-card-details_imageContainer__3Q-yR\",\"img\":\"order-card-details_img__yLNcZ\",\"footer\":\"order-card-details_footer__3qVov\",\"price\":\"order-card-details_price__29JoQ\"};","// hooks.ts\r\nimport {\r\n  TypedUseSelectorHook,\r\n  useDispatch as dispatchHook,\r\n  useSelector as selectorHook,\r\n} from \"react-redux\";\r\nimport { TAppDispatch, TAppThunk, RootState } from \"./types/index\";\r\n\r\n// Теперь этот хук «знает» структуру хранилища\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n\r\n// Хук не даст отправить экшен, который ему не знаком\r\nexport const useDispatch = () => dispatchHook<TAppDispatch | TAppThunk>();\r\n","export function getCookie(name: string): string | undefined {\r\n  const matches = document.cookie.match(\r\n    new RegExp(\r\n      \"(?:^|; )\" +\r\n        name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, \"\\\\$1\") +\r\n        \"=([^;]*)\"\r\n    )\r\n  );\r\n  return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nexport function setCookie(name: string, value: any, props?: any) {\r\n  props = props || {};\r\n  let exp = props.expires;\r\n  if (typeof exp == \"number\" && exp) {\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + exp * 1000);\r\n    exp = props.expires = d;\r\n  }\r\n  if (exp && exp.toUTCString) {\r\n    props.expires = exp.toUTCString();\r\n  }\r\n  value = encodeURIComponent(value);\r\n  let updatedCookie = name + \"=\" + value;\r\n  for (const propName in props) {\r\n    updatedCookie += \"; \" + propName;\r\n    const propValue = props[propName];\r\n    if (propValue !== true) {\r\n      updatedCookie += \"=\" + propValue;\r\n    }\r\n  }\r\n  document.cookie = updatedCookie;\r\n}\r\n\r\nexport function deleteCookie(name: string): void {\r\n  setCookie(name, null, { expires: -1 });\r\n}\r\n","export const ENDPOINT: string = \"https://norma.nomoreparties.space\";\r\nexport const AUTH_ENDPOINT: string = \"https://norma.nomoreparties.space/api\";\r\nexport const WS_ENDPOINT: string = `wss://norma.nomoreparties.space/orders`;\r\nexport const ORDER_ENDPOINT: string = `https://norma.nomoreparties.space/api/orders/`;\r\n","export function parseDay(createdAt: string) {\r\n  const weekDay = [\r\n    \"понедельник\",\r\n    \"вторник\",\r\n    \"среда\",\r\n    \"четверг\",\r\n    \"пятница\",\r\n    \"субота\",\r\n    \"воскресенье\",\r\n  ];\r\n\r\n  const createdAtMonth = Number(createdAt.slice(5, 7));\r\n  const createdAtDay = Number(createdAt.slice(8, 10));\r\n\r\n  let currentDate = new Date();\r\n\r\n  let result = \"\";\r\n\r\n  if (\r\n    createdAtMonth === currentDate.getMonth() + 1 &&\r\n    createdAtDay === currentDate.getDate()\r\n  ) {\r\n    result += \"Сегодня\";\r\n  } else {\r\n    result += weekDay[currentDate.getDay()];\r\n  }\r\n\r\n  result += `, ${createdAt.slice(11, 16)} i-GMT+3`;\r\n  return result;\r\n}\r\n\r\n\r\nexport function checkResponse(res: any) {\r\n  if (res.ok) {\r\n    return res;\r\n  } else {\r\n    throw new Error(`${res.status}`);\r\n  }\r\n}\r\n","export const GET_INGREDIENTS_REQUEST: \"GET_INGREDIENTS_REQUEST\" =\r\n  \"GET_INGREDIENTS_REQUEST\";\r\nexport const GET_INGREDIENTS_SUCCESS: \"GET_INGREDIENTS_SUCCESS\" =\r\n  \"GET_INGREDIENTS_SUCCESS\";\r\nexport const GET_INGREDIENTS_ERROR: \"GET_INGREDIENTS_ERROR\" =\r\n  \"GET_INGREDIENTS_ERROR\";\r\n","import { ENDPOINT } from \"../../utils/api\";\r\nimport { TIngredientType } from \"../types/data\";\r\nimport { TAppDispatch, TAppThunk } from \"../types/index\";\r\nimport { checkResponse } from \"../../utils/utils\";\r\nimport {\r\n  GET_INGREDIENTS_REQUEST,\r\n  GET_INGREDIENTS_SUCCESS,\r\n  GET_INGREDIENTS_ERROR,\r\n} from \"../constants/burger-ingredients\";\r\n\r\nexport interface IGetIngredientsRequest {\r\n  readonly type: typeof GET_INGREDIENTS_REQUEST;\r\n}\r\n\r\nexport interface IGetIngredientsSuccess {\r\n  readonly type: typeof GET_INGREDIENTS_SUCCESS;\r\n  readonly payload: Array<TIngredientType>;\r\n}\r\n\r\nexport interface IGetIngredientsError {\r\n  readonly type: typeof GET_INGREDIENTS_ERROR;\r\n}\r\n\r\nexport type TIngredientsActions =\r\n  | IGetIngredientsRequest\r\n  | IGetIngredientsSuccess\r\n  | IGetIngredientsError;\r\n\r\nconst getIngredientsRequest = () => {\r\n  return {\r\n    type: GET_INGREDIENTS_REQUEST,\r\n  };\r\n};\r\n\r\nconst getIngredientsSuccess = (\r\n  ingredientsData: Array<TIngredientType>\r\n): IGetIngredientsSuccess => {\r\n  return {\r\n    type: GET_INGREDIENTS_SUCCESS,\r\n    payload: ingredientsData,\r\n  };\r\n};\r\n\r\nexport const getBurgerIngredients: TAppThunk =\r\n  () => (dispatch: TAppDispatch) => {\r\n    dispatch(getIngredientsRequest());\r\n    fetch(`${ENDPOINT}/api/ingredients`)\r\n      .then((res) => checkResponse(res))\r\n      .then((res) => res.json())\r\n      .then((data) => dispatch(getIngredientsSuccess(data.data)))\r\n      .catch((e) => {\r\n        dispatch({\r\n          type: GET_INGREDIENTS_ERROR,\r\n        });\r\n        console.log(\"Error: \" + e.message);\r\n        console.log(e.response);\r\n      });\r\n  };\r\n\r\n","export const REGISTRATION_REQUEST: \"REGISTRATION_REQUEST\" =\r\n  \"REGISTRATION_REQUEST\";\r\nexport const REGISTRATION_SUCCESS: \"REGISTRATION_SUCCESS\" =\r\n  \"REGISTRATION_SUCCESS\";\r\nexport const REGISTRATION_ERROR: \"REGISTRATION_ERROR\" = \"REGISTRATION_ERROR\";\r\n\r\nexport const AUTHORIZATION_REQUEST: \"AUTHORIZATION_REQUEST\" =\r\n  \"AUTHORIZATION_REQUEST\";\r\nexport const AUTHORIZATION_SUCCESS: \"AUTHORIZATION_SUCCESS\" =\r\n  \"AUTHORIZATION_SUCCESS\";\r\nexport const AUTHORIZATION_ERROR: \"AUTHORIZATION_ERROR\" = \"AUTHORIZATION_ERROR\";\r\n\r\nexport const PASSWORD_RECOVERY_REQUEST: \"PASSWORD_RECOVERY_REQUEST\" =\r\n  \"PASSWORD_RECOVERY_REQUEST\";\r\nexport const PASSWORD_RECOVERY_SUCCESS: \"PASSWORD_RECOVERY_SUCCESS\" =\r\n  \"PASSWORD_RECOVERY_SUCCESS\";\r\nexport const PASSWORD_RECOVERY_ERROR: \"PASSWORD_RECOVERY_ERROR\" =\r\n  \"PASSWORD_RECOVERY_ERROR\";\r\n\r\nexport const PASSWORD_UPDATING_REQUEST: \"PASSWORD_UPDATING_REQUEST\" =\r\n  \"PASSWORD_UPDATING_REQUEST\";\r\nexport const PASSWORD_UPDATING_SUCCESS: 'PASSWORD_UPDATING_SUCCESS' =\r\n  'PASSWORD_UPDATING_SUCCESS';\r\nexport const PASSWORD_UPDATING_ERROR: \"PASSWORD_UPDATING_ERROR\" =\r\n  \"PASSWORD_UPDATING_ERROR\";\r\n\r\nexport const LOGOUT_REQUEST: \"LOGOUT_REQUEST\" = \"LOGOUT_REQUEST\";\r\nexport const LOGOUT_SUCCESS: \"LOGOUT_SUCCESS\" = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_ERROR: \"LOGOUT_ERROR\" = \"LOGOUT_ERROR\";\r\n\r\nexport const GET_USER_INFO_REQUEST: \"GET_USER_INFO_REQUEST\" =\r\n  \"GET_USER_INFO_REQUEST\";\r\nexport const GET_USER_INFO_SUCCESS: \"GET_USER_INFO_SUCCESS\" =\r\n  \"GET_USER_INFO_SUCCESS\";\r\nexport const GET_USER_INFO_ERROR: \"GET_USER_INFO_ERROR\" = \"GET_USER_INFO_ERROR\";\r\n\r\nexport const UPDATE_USER_INFO_REQUEST: \"UPDATE_USER_INFO_REQUEST\" =\r\n  \"UPDATE_USER_INFO_REQUEST\";\r\nexport const UPDATE_USER_INFO_SUCCESS: \"UPDATE_USER_INFO_SUCCESS\" =\r\n  \"UPDATE_USER_INFO_SUCCESS\";\r\nexport const UPDATE_USER_INFO_ERROR: \"UPDATE_USER_INFO_ERROR\" =\r\n  \"UPDATE_USER_INFO_ERROR\";\r\n\r\nexport const REFRESH_TOKEN_REQUEST: \"REFRESH_TOKEN_REQUEST\" =\r\n  \"REFRESH_TOKEN_REQUEST\";\r\nexport const REFRESH_TOKEN_SUCCESS: \"REFRESH_TOKEN_SUCCESS\" =\r\n  \"REFRESH_TOKEN_SUCCESS\";\r\n  export const REFRESH_TOKEN_ERROR: \"REFRESH_TOKEN_ERROR\" =\r\n    \"REFRESH_TOKEN_ERROR\";\r\n","import { AUTH_ENDPOINT } from \"../../utils/api\";\r\nimport { getCookie } from \"../../utils/cookies\";\r\nimport { TUserData } from \"../types/data\";\r\nimport { TAppThunk, TAppDispatch } from \"../types/index\";\r\nimport { checkResponse } from \"../../utils/utils\";\r\nimport {\r\n  REGISTRATION_REQUEST,\r\n  REGISTRATION_SUCCESS,\r\n  REGISTRATION_ERROR,\r\n  AUTHORIZATION_REQUEST,\r\n  AUTHORIZATION_SUCCESS,\r\n  AUTHORIZATION_ERROR,\r\n  PASSWORD_RECOVERY_REQUEST,\r\n  PASSWORD_RECOVERY_SUCCESS,\r\n  PASSWORD_RECOVERY_ERROR,\r\n  PASSWORD_UPDATING_REQUEST,\r\n  PASSWORD_UPDATING_SUCCESS,\r\n  PASSWORD_UPDATING_ERROR,\r\n  LOGOUT_REQUEST,\r\n  LOGOUT_SUCCESS,\r\n  LOGOUT_ERROR,\r\n  GET_USER_INFO_REQUEST,\r\n  GET_USER_INFO_SUCCESS,\r\n  GET_USER_INFO_ERROR,\r\n  UPDATE_USER_INFO_REQUEST,\r\n  UPDATE_USER_INFO_SUCCESS,\r\n  UPDATE_USER_INFO_ERROR,\r\n  REFRESH_TOKEN_REQUEST,\r\n  REFRESH_TOKEN_SUCCESS,\r\n  REFRESH_TOKEN_ERROR,\r\n} from \"../constants/auth\";\r\n\r\nexport type TUserActions =\r\n  | {\r\n      type: typeof REGISTRATION_REQUEST;\r\n    }\r\n  | {\r\n      type: typeof REGISTRATION_ERROR;\r\n    }\r\n  | {\r\n      type: typeof REGISTRATION_SUCCESS;\r\n      payload: {\r\n        user: {\r\n          email: string;\r\n          name: string;\r\n        };\r\n        accessToken: string;\r\n        refreshToken: string;\r\n      };\r\n    }\r\n  | {\r\n      type: typeof AUTHORIZATION_REQUEST;\r\n    }\r\n  | {\r\n      type: typeof AUTHORIZATION_ERROR;\r\n    }\r\n  | {\r\n      type: typeof AUTHORIZATION_SUCCESS;\r\n      payload: {\r\n        user: {\r\n          email: string;\r\n          name: string;\r\n        };\r\n        accessToken: string;\r\n        refreshToken: string;\r\n      };\r\n    }\r\n  | {\r\n      type: typeof PASSWORD_UPDATING_REQUEST;\r\n    }\r\n  | {\r\n      type: typeof PASSWORD_UPDATING_ERROR;\r\n    }\r\n  | {\r\n      type: typeof PASSWORD_RECOVERY_SUCCESS;\r\n    }\r\n  | {\r\n      type: typeof PASSWORD_RECOVERY_REQUEST;\r\n    }\r\n  | {\r\n      type: typeof PASSWORD_RECOVERY_ERROR;\r\n    }\r\n  | {\r\n      type: typeof PASSWORD_UPDATING_SUCCESS;\r\n    }\r\n  | {\r\n      type: typeof LOGOUT_REQUEST;\r\n    }\r\n  | {\r\n      type: typeof LOGOUT_SUCCESS;\r\n    }\r\n  | {\r\n      type: typeof LOGOUT_ERROR;\r\n    }\r\n  | {\r\n      type: typeof GET_USER_INFO_REQUEST;\r\n    }\r\n  | {\r\n      type: typeof GET_USER_INFO_SUCCESS;\r\n      payload: {\r\n        user: {\r\n          email: string;\r\n          name: string;\r\n        };\r\n      };\r\n    }\r\n  | {\r\n      type: typeof GET_USER_INFO_ERROR;\r\n    }\r\n  | {\r\n      type: typeof UPDATE_USER_INFO_REQUEST;\r\n    }\r\n  | {\r\n      type: typeof UPDATE_USER_INFO_SUCCESS;\r\n      payload: {\r\n        user: {\r\n          email: string;\r\n          name: string;\r\n        };\r\n      };\r\n    }\r\n  | {\r\n      type: typeof UPDATE_USER_INFO_ERROR;\r\n    }\r\n  | {\r\n      type: typeof REFRESH_TOKEN_REQUEST;\r\n    }\r\n  | {\r\n      type: typeof REFRESH_TOKEN_SUCCESS;\r\n      payload: {\r\n        accessToken: string;\r\n        refreshToken: string;\r\n      };\r\n    }\r\n  | {\r\n      type: typeof REFRESH_TOKEN_ERROR;\r\n    };\r\n\r\nexport const registration: TAppThunk =\r\n  (userData: TUserData) => (dispatch: TAppDispatch) => {\r\n    dispatch({\r\n      type: REGISTRATION_REQUEST,\r\n    });\r\n    fetch(`${AUTH_ENDPOINT}/auth/register`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(userData),\r\n    })\r\n      .then((res) => checkResponse(res))\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        dispatch({\r\n          type: REGISTRATION_SUCCESS,\r\n          payload: data,\r\n        });\r\n      })\r\n\r\n      .catch((e) => {\r\n        dispatch({\r\n          type: REGISTRATION_ERROR,\r\n        });\r\n        console.log(\"Error: \" + e.message);\r\n        console.log(e.response);\r\n      });\r\n  };\r\n\r\nexport const authorization: TAppThunk =\r\n  (userData: TUserData) => (dispatch: TAppDispatch) => {\r\n    dispatch({\r\n      type: AUTHORIZATION_REQUEST,\r\n    });\r\n    fetch(`${AUTH_ENDPOINT}/auth/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(userData),\r\n    })\r\n      .then((res) => checkResponse(res))\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        dispatch({\r\n          type: AUTHORIZATION_SUCCESS,\r\n          payload: data,\r\n        });\r\n      })\r\n\r\n      .catch((e) => {\r\n        dispatch({\r\n          type: AUTHORIZATION_ERROR,\r\n        });\r\n        console.log(\"Error: \" + e.message);\r\n        console.log(e.response);\r\n      });\r\n  };\r\n\r\nexport const recoverPassword: TAppThunk =\r\n  (emailData: { email: string }) => (dispatch: TAppDispatch) => {\r\n    dispatch({\r\n      type: PASSWORD_RECOVERY_REQUEST,\r\n    });\r\n    fetch(`${AUTH_ENDPOINT}/password-reset`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(emailData),\r\n    })\r\n      .then((res) => checkResponse(res))\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        dispatch({\r\n          type: PASSWORD_RECOVERY_SUCCESS,\r\n        });\r\n      })\r\n\r\n      .catch((e) => {\r\n        dispatch({\r\n          type: PASSWORD_RECOVERY_ERROR,\r\n        });\r\n        console.log(\"Error: \" + e.message);\r\n        console.log(e.response);\r\n      });\r\n  };\r\n\r\nexport const updatePassword: TAppThunk =\r\n  (newPasswordData: { password: string; token: string }) =>\r\n  (dispatch: TAppDispatch) => {\r\n    dispatch({\r\n      type: PASSWORD_UPDATING_REQUEST,\r\n    });\r\n    fetch(`${AUTH_ENDPOINT}/password-reset/reset`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(newPasswordData),\r\n    })\r\n      .then((res) => checkResponse(res))\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        dispatch({\r\n          type: PASSWORD_UPDATING_SUCCESS,\r\n        });\r\n      })\r\n\r\n      .catch((e) => {\r\n        dispatch({\r\n          type: PASSWORD_UPDATING_ERROR,\r\n        });\r\n        console.log(\"Error: \" + e.message);\r\n        console.log(e.response);\r\n      });\r\n  };\r\n\r\nexport const logout: TAppThunk = () => {\r\n  const refreshToken = getCookie(\"refreshToken\");\r\n  const data = {\r\n    token: `${refreshToken}`,\r\n  };\r\n  return function (dispatch: TAppDispatch) {\r\n    dispatch({\r\n      type: LOGOUT_REQUEST,\r\n    });\r\n    fetch(`${AUTH_ENDPOINT}/auth/logout`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => checkResponse(res))\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        dispatch({\r\n          type: LOGOUT_SUCCESS,\r\n        });\r\n      })\r\n\r\n      .catch((e) => {\r\n        dispatch({\r\n          type: LOGOUT_ERROR,\r\n        });\r\n        console.log(\"Error: \" + e.message);\r\n        console.log(e.response);\r\n      });\r\n  };\r\n};\r\n\r\n//---------------------------------------------------------------------------GET_USER_INFO-----------------------------\r\nexport const getUserInfo: TAppThunk = () => (dispatch: TAppDispatch) => {\r\n  dispatch({\r\n    type: GET_USER_INFO_REQUEST,\r\n  });\r\n\r\n  fetch(`${AUTH_ENDPOINT}/auth/user`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + getCookie(\"acessToken\"),\r\n    },\r\n  })\r\n    .then((res) => checkResponse(res))\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      dispatch({\r\n        type: GET_USER_INFO_SUCCESS,\r\n        payload: data,\r\n      });\r\n    })\r\n\r\n    .catch((e) => {\r\n      if ((e.message = \"403\")) {\r\n        dispatch({\r\n          type: GET_USER_INFO_ERROR,\r\n        });\r\n        console.log(((e.message = \"403\"), \"GET_USER_INFO_ERROR\"));\r\n      }\r\n    });\r\n};\r\n\r\n//---------------------------------------------------------------------------UPDATE_USER_INFO-----------------------------\r\nexport const updateUserInfo: TAppThunk =\r\n  (data: { name: string; email: string }) => (dispatch: TAppDispatch) => {\r\n    dispatch({\r\n      type: UPDATE_USER_INFO_REQUEST,\r\n    });\r\n    fetch(`${AUTH_ENDPOINT}/auth/user`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n        Authorization: \"Bearer \" + getCookie(\"acessToken\"),\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => checkResponse(res))\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        dispatch({\r\n          type: UPDATE_USER_INFO_SUCCESS,\r\n          payload: data,\r\n        });\r\n      })\r\n\r\n      .catch((e) => {\r\n        if ((e.message = \"403\")) {\r\n          dispatch({\r\n            type: UPDATE_USER_INFO_ERROR,\r\n          });\r\n          console.log(((e.message = \"403\"), \"UPDATE_USER_INFO_ERROR\"));\r\n        }\r\n      });\r\n  };\r\n\r\n//---------------------------------------------------------------------------UPDATE_TOKEN-----------------------------\r\nexport const refreshToken: TAppThunk =\r\n  (\r\n    isGettingUserInfo: boolean,\r\n    data?: {\r\n      name: string;\r\n      email: string;\r\n    }\r\n  ) =>\r\n  (dispatch: TAppDispatch) => {\r\n    dispatch({\r\n      type: REFRESH_TOKEN_REQUEST,\r\n    });\r\n\r\n    fetch(`${AUTH_ENDPOINT}/auth/token`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        token: `${getCookie(\"refreshToken\")}`,\r\n      }),\r\n    })\r\n      .then((res) => checkResponse(res))\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        dispatch({\r\n          type: REFRESH_TOKEN_SUCCESS,\r\n          payload: data,\r\n        });\r\n      })\r\n\r\n      .catch((e) => {\r\n        dispatch({\r\n          type: REFRESH_TOKEN_ERROR,\r\n        });\r\n        console.log(\"Error: \" + e.message);\r\n        console.log(e.response);\r\n      });\r\n  };\r\n\r\n","import { BurgerIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { ListIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { ProfileIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport navigationElementStyles from \"./navigation-element.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ntype TNavigationElement = {\r\n  exact?: boolean;\r\n  type: string;\r\n  name: string;\r\n  path: string;\r\n  isActive: boolean;\r\n};\r\nfunction NavigationElement({\r\n  type,\r\n  name,\r\n  path,\r\n  isActive,\r\n  exact,\r\n}: TNavigationElement) {\r\n  let iconType: \"secondary\" | \"primary\" | \"error\" | \"success\" = \"secondary\";\r\n  let icon;\r\n\r\n  if (isActive) {\r\n    iconType = \"primary\";\r\n  }\r\n\r\n  switch (type) {\r\n    case \"constructor\":\r\n      icon = <BurgerIcon type={iconType} />;\r\n      break;\r\n    case \"order list\":\r\n      icon = <ListIcon type={iconType} />;\r\n      break;\r\n    case \"personal cabinet\":\r\n      icon = <ProfileIcon type={iconType} />;\r\n      break;\r\n    default:\r\n  }\r\n\r\n  return (\r\n    <div className=\"pt-4 pr-5 pb-4 pl-5\">\r\n      <li className={navigationElementStyles.navigationelement}>\r\n        {icon}\r\n        <div className=\"ml-2 text text_type_main-small\">\r\n          {/*<p className={linkClassName}>{props.name}</p>*/}\r\n          <NavLink\r\n            exact={exact}\r\n            to={path}\r\n            className={navigationElementStyles.navElement}\r\n            activeClassName={navigationElementStyles.navElementActive}\r\n          >\r\n            {name}\r\n          </NavLink>\r\n        </div>\r\n      </li>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavigationElement;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { Logo } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport NavigationElement from \"../navigation-element/navigation-element\";\r\n\r\nimport appHeaderStyles from \"./app-header.module.css\";\r\n\r\nfunction AppHeader() {\r\n  return (\r\n    <header>\r\n      <div className={appHeaderStyles.header}>\r\n        <div className={appHeaderStyles.header__container}>\r\n          <div className={appHeaderStyles.header__leftlinks}>\r\n            <div className=\"mr-2\">\r\n              <NavigationElement\r\n                exact={true}\r\n                type=\"constructor\"\r\n                name=\"Конструктор\"\r\n                path=\"/\"\r\n                isActive\r\n              />\r\n            </div>\r\n            <NavigationElement\r\n              type=\"order list\"\r\n              name=\"Лента заказов\"\r\n              path=\"/feed\"\r\n              isActive\r\n            />\r\n          </div>\r\n          <NavLink exact to={`/`}>\r\n            <Logo />\r\n          </NavLink>\r\n\r\n          <div className={appHeaderStyles.header__rightlinks}>\r\n            <NavigationElement\r\n              type=\"personal cabinet\"\r\n              name=\"Личный кабинет\"\r\n              path=\"/profile\"\r\n              isActive\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default AppHeader;\r\n","export const SHOW_INGREDIENT_DETAILS: \"SHOW_INGREDIENT_DETAILS\" =\r\n  \"SHOW_INGREDIENT_DETAILS\";\r\nexport const HIDE_INGREDIENT_DETAILS: \"HIDE_INGREDIENT_DETAILS\" =\r\n  \"HIDE_INGREDIENT_DETAILS\";\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"../../services/hooks\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Counter } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nimport ingredientCardStyles from \"./ingredient-card.module.css\";\r\nimport { showIngredientDetails } from \"../../services/actions/ingredient-details\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport type TIngredientCardType = {\r\n  image: string;\r\n  image_large: string;\r\n  name: string;\r\n  price: number;\r\n  calories: number;\r\n  proteins: number;\r\n  fat: number;\r\n  carbohydrates: number;\r\n  _id: string;\r\n  type: string;\r\n};\r\n\r\nconst IngredientCard = ({\r\n  image,\r\n  image_large,\r\n  name,\r\n  price,\r\n  calories,\r\n  proteins,\r\n  fat,\r\n  carbohydrates,\r\n  _id,\r\n  type,\r\n}: TIngredientCardType) => {\r\n  const [orderCount, setOrderCount] = React.useState(0);\r\n\r\n  const { sausesAndFillings, bun } = useSelector((store) => ({\r\n    sausesAndFillings: store.burgerConstructor.sausesAndFillings,\r\n    bun: store.burgerConstructor.bun,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    const theSameIngredientsAmount =\r\n      sausesAndFillings.filter((ingredient) => ingredient._id === _id).length +\r\n      (bun?._id === _id ? 2 : 0);\r\n    setOrderCount(theSameIngredientsAmount);\r\n  }, [sausesAndFillings.length, bun?._id, _id, sausesAndFillings]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [{ isDrag }, dragRef] = useDrag({\r\n    type: \"ingredient\",\r\n    item: {\r\n      ingredient: {\r\n        calories: calories,\r\n        carbohydrates: carbohydrates,\r\n        fat: fat,\r\n        image: image,\r\n        image_large: image_large,\r\n        name: name,\r\n        price: price,\r\n        proteins: proteins,\r\n        type: type,\r\n        _id: _id,\r\n        key: uuidv4(),\r\n      },\r\n    },\r\n    collect: (monitor) => ({\r\n      isDrag: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  const draggingElementClassName = `${\r\n    ingredientCardStyles.ingredientcard__container\r\n  } ${isDrag && ingredientCardStyles.onDrugging}`;\r\n\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Link\r\n      key={_id}\r\n      to={{\r\n        // Тут мы формируем динамический путь для нашего ингредиента\r\n        // а также сохраняем в свойство background роут, на котором была открыта наша модалка.\r\n        pathname: `/ingredients/${_id}}`,\r\n        state: { background: location },\r\n      }}\r\n      //className={styles.link}\r\n    >\r\n      <div\r\n        className={draggingElementClassName}\r\n        onClick={() => dispatch(showIngredientDetails(_id))}\r\n        ref={dragRef}\r\n      >\r\n        <div>\r\n          {orderCount === 0 || <Counter count={orderCount} size=\"default\" />}\r\n          <img src={image} alt={name} className=\"ml-4 mr-4\" />\r\n        </div>\r\n        <div className=\"mt-1 mb-1\">\r\n          <div className={ingredientCardStyles.ingredientcard__price}>\r\n            <p className=\"text text_type_digits-default\">{price}</p>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n        </div>\r\n        <div className={ingredientCardStyles.ingredientcard__description}>\r\n          <p className=\"text text_type_main-small\">{name}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default IngredientCard;\r\n","import {\r\n  SHOW_INGREDIENT_DETAILS,\r\n  HIDE_INGREDIENT_DETAILS,\r\n} from \"../constants/ingredient-details\";\r\n\r\nexport interface IHideIngredientDetails {\r\n  readonly type: typeof HIDE_INGREDIENT_DETAILS;\r\n}\r\n\r\nexport interface IShowIngredientDetails {\r\n  readonly type: typeof SHOW_INGREDIENT_DETAILS;\r\n  readonly payload: string;\r\n}\r\n\r\nexport type TIngredientDetailsActions =\r\n  | IShowIngredientDetails\r\n  | IHideIngredientDetails;\r\n\r\nexport const hideIngredientDetails = () => {\r\n  return {\r\n    type: HIDE_INGREDIENT_DETAILS,\r\n  };\r\n};\r\n\r\nexport const showIngredientDetails = (id: string): IShowIngredientDetails => {\r\n  return {\r\n    type: SHOW_INGREDIENT_DETAILS,\r\n    payload: id,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport burgerIngredientsContainerStyles from \"./burger-ingredients-container.module.css\";\r\nimport { useSelector } from \"../../services/hooks\";\r\nimport IngredientCard from \"../ingredient-card/ingredient-card\";\r\nimport { TIngredientType } from \"../../services/types/data\";\r\n\r\ntype TBurgerIngredientsContainerType = {\r\n  header: string;\r\n  reference: React.RefObject<HTMLDivElement>;\r\n  type: string;\r\n};\r\n\r\nconst BurgerIngredientsContainer = ({\r\n  header,\r\n  reference,\r\n  type,\r\n}: TBurgerIngredientsContainerType) => {\r\n  const { ingredients } = useSelector((store) => ({\r\n    ingredients: store.burgerIngredients.ingredients,\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"mt-10\" id={type} ref={reference}>\r\n        {header}\r\n      </h1>\r\n      <div className=\"ml-4 mt-6 mb-10\">\r\n        <div\r\n          className={\r\n            burgerIngredientsContainerStyles.ingredientconteinercontent\r\n          }\r\n        >\r\n          {ingredients\r\n            .filter((cardData: TIngredientType) => cardData.type === type)\r\n            .map((cardData: TIngredientType) => (\r\n              <div key={cardData._id} data-test-id={cardData._id}>\r\n                {cardData.image &&\r\n                  cardData.image_large &&\r\n                  cardData.name &&\r\n                  cardData.price &&\r\n                  cardData.calories &&\r\n                  cardData.proteins &&\r\n                  cardData.fat &&\r\n                  cardData.carbohydrates &&\r\n                  cardData._id &&\r\n                  cardData.type && (\r\n                    <IngredientCard\r\n                      image={cardData.image}\r\n                      image_large={cardData.image_large}\r\n                      name={cardData.name}\r\n                      price={cardData.price}\r\n                      calories={cardData.calories}\r\n                      proteins={cardData.proteins}\r\n                      fat={cardData.fat}\r\n                      carbohydrates={cardData.carbohydrates}\r\n                      _id={cardData._id}\r\n                      key={cardData._id}\r\n                      type={cardData.type}\r\n                    />\r\n                  )}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BurgerIngredientsContainer;\r\n","import React, { useRef } from \"react\";\r\nimport { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport burgerIngredientsStyles from \"./burger-ingredients.module.css\";\r\nimport BurgerIngredientsContainer from \"../burger-ingredients-container/burger-ingredients-container\";\r\n\r\nconst BurgerIngredients = () => {\r\n  const [activeTabLink, setactiveTabLink] = React.useState(\"bun\");\r\n\r\n  function handleTab(type: string) {\r\n    switch (type) {\r\n      case \"one\":\r\n        setactiveTabLink(\"bun\");\r\n        break;\r\n      case \"two\":\r\n        setactiveTabLink(\"sauces\");\r\n        break;\r\n      case \"three\":\r\n        setactiveTabLink(\"fillings\");\r\n        break;\r\n      default:\r\n        setactiveTabLink(\"bun\");\r\n        break;\r\n    }\r\n  }\r\n\r\n  //---------------------------------------------------------------------\r\n  //scroll\r\n  const refBun = useRef<HTMLHeadingElement>(null);\r\n  const refSauce = useRef<HTMLHeadingElement>(null);\r\n  const refFilling = useRef<HTMLHeadingElement>(null);\r\n\r\n  const onScroll = (type: string) => {\r\n    let bunPosition: number = 0;\r\n    let saucePosition: number = 0;\r\n    let fillingPosition: number = 0;\r\n\r\n    if (refBun && refBun.current) {\r\n      bunPosition = refBun.current.getBoundingClientRect().top - 300;\r\n    }\r\n    if (refSauce && refSauce.current) {\r\n      saucePosition = refSauce.current.getBoundingClientRect().top - 300;\r\n    }\r\n    if (refFilling && refFilling.current) {\r\n      fillingPosition = refFilling.current.getBoundingClientRect().top - 300;\r\n    }\r\n\r\n    if (\r\n      Math.abs(bunPosition) < Math.abs(saucePosition) &&\r\n      Math.abs(bunPosition) < Math.abs(fillingPosition)\r\n    ) {\r\n      setactiveTabLink(\"bun\");\r\n    }\r\n\r\n    if (\r\n      Math.abs(saucePosition) < Math.abs(bunPosition) &&\r\n      Math.abs(saucePosition) < Math.abs(fillingPosition)\r\n    ) {\r\n      setactiveTabLink(\"sauces\");\r\n    }\r\n\r\n    if (\r\n      Math.abs(fillingPosition) < Math.abs(bunPosition) &&\r\n      Math.abs(fillingPosition) < Math.abs(saucePosition)\r\n    ) {\r\n      setactiveTabLink(\"fillings\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={burgerIngredientsStyles.tab}>\r\n        <Tab value=\"one\" active={activeTabLink === \"bun\"} onClick={handleTab}>\r\n          <a\r\n            className={`${burgerIngredientsStyles.linkinactive} ${\r\n              activeTabLink === \"bun\" && burgerIngredientsStyles.linkactive\r\n            }`}\r\n            href=\"#bun\"\r\n          >\r\n            {\" \"}\r\n            Булки{\" \"}\r\n          </a>\r\n        </Tab>\r\n        <Tab\r\n          value=\"two\"\r\n          active={activeTabLink === \"sauces\"}\r\n          onClick={handleTab}\r\n        >\r\n          <a\r\n            className={`${burgerIngredientsStyles.linkinactive} ${\r\n              activeTabLink === \"sauces\" && burgerIngredientsStyles.linkactive\r\n            }`}\r\n            href=\"#sauce\"\r\n          >\r\n            {\" \"}\r\n            Соусы{\" \"}\r\n          </a>\r\n        </Tab>\r\n        <Tab\r\n          value=\"three\"\r\n          active={activeTabLink === \"fillings\"}\r\n          onClick={handleTab}\r\n        >\r\n          <a\r\n            className={`${burgerIngredientsStyles.linkinactive} ${\r\n              activeTabLink === \"fillings\" && burgerIngredientsStyles.linkactive\r\n            }`}\r\n            href=\"#main\"\r\n          >\r\n            {\" \"}\r\n            Начинки{\" \"}\r\n          </a>\r\n        </Tab>\r\n      </div>\r\n      <div\r\n        className={burgerIngredientsStyles.ingredients}\r\n        onScroll={() => onScroll}\r\n      >\r\n        <BurgerIngredientsContainer\r\n          header={\"Булки\"}\r\n          type={\"bun\"}\r\n          reference={refBun}\r\n        />\r\n        <BurgerIngredientsContainer\r\n          header={\"Соусы\"}\r\n          type={\"sauce\"}\r\n          reference={refSauce}\r\n        />\r\n        <BurgerIngredientsContainer\r\n          header={\"Начинки\"}\r\n          type={\"main\"}\r\n          reference={refFilling}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BurgerIngredients;\r\n","export const ADD_INGREDIENT: \"ADD_INGREDIENT\" = \"ADD_INGREDIENT\";\r\nexport const DELETE_INGREDIENT: \"DELETE_INGREDIENT\" = \"DELETE_INGREDIENT\";\r\nexport const MOVE_INGREDIENTS: \"MOVE_INGREDIENTS\" = \"MOVE_INGREDIENTS\";\r\nexport const CLEAR_INGREDIENTS: \"CLEAR_INGREDIENTS\" = \"CLEAR_INGREDIENTS\";\r\n","import { useRef } from \"react\";\r\nimport { useDispatch } from \"../../services/hooks\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { ConstructorElement } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { DragIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport burgerConstructorElementStyles from \"./burger-constructor-element.module.css\";\r\n\r\nimport {\r\n  deleteIngredient,\r\n  moveIngredients,\r\n} from \"../../services/actions/burger-constructor\";\r\n\r\ntype TBurgerConstructorElementType = {\r\n  name: string;\r\n  price: number;\r\n  image: string;\r\n  index: number;\r\n};\r\ntype TBurgerConstructorElementItem = {\r\n  index: number;\r\n};\r\n\r\nexport const BurgerConstructorElement = ({\r\n  name,\r\n  price,\r\n  image,\r\n  index,\r\n}: TBurgerConstructorElementType) => {\r\n  const dispatch = useDispatch();\r\n  const handleDeletingIngredient = () => {\r\n    dispatch(deleteIngredient(index));\r\n  };\r\n\r\n  const [{ isDrag }, drag] = useDrag({\r\n    type: \"chosenIngredient\",\r\n    item: { index: index },\r\n    collect: (monitor) => ({\r\n      isDrag: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  const [, drop] = useDrop({\r\n    accept: \"chosenIngredient\",\r\n    collect: (monitor) => ({\r\n      isHover: monitor.isOver(),\r\n    }),\r\n    hover(item: TBurgerConstructorElementItem, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n      // Don't replace items with themselves\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n      dispatch(moveIngredients(dragIndex, hoverIndex));\r\n      // Note: we're mutating the monitor item here!\r\n      // Generally it's better to avoid mutations,\r\n      // but it's good here for the sake of performance\r\n      // to avoid expensive index searches.\r\n      item.index = hoverIndex;\r\n    },\r\n  });\r\n\r\n  const draggingElementClassName = `${burgerConstructorElementStyles.element} ${\r\n    isDrag && burgerConstructorElementStyles.onDrugging\r\n  }`;\r\n\r\n  const ref = useRef(null);\r\n  drag(drop(ref));\r\n\r\n  return (\r\n    <div className={burgerConstructorElementStyles.dpopTarget} ref={ref}>\r\n      <div className={draggingElementClassName}>\r\n        <div className={burgerConstructorElementStyles.dragIcon + \" mr-3\"}>\r\n          <DragIcon type=\"primary\" />\r\n        </div>\r\n\r\n        <ConstructorElement\r\n          text={name}\r\n          price={price}\r\n          thumbnail={image}\r\n          handleClose={handleDeletingIngredient}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { TIngredientType } from \"../types/data\";\r\n\r\nimport {\r\n  ADD_INGREDIENT,\r\n  DELETE_INGREDIENT,\r\n  MOVE_INGREDIENTS,\r\n  CLEAR_INGREDIENTS,\r\n} from \"../constants/burger-constructor\";\r\n\r\nexport interface IAddIngredient {\r\n  readonly type: typeof ADD_INGREDIENT;\r\n  readonly payload: TIngredientType;\r\n}\r\n\r\nexport interface IDeleteIngredient {\r\n  readonly type: typeof DELETE_INGREDIENT;\r\n  readonly index: number;\r\n}\r\n\r\nexport interface IMoveIngredients {\r\n  readonly type: typeof MOVE_INGREDIENTS;\r\n  readonly dragIndex: number;\r\n  readonly hoverIndex: number;\r\n}\r\n\r\nexport interface clearIngredients {\r\n  readonly type: typeof CLEAR_INGREDIENTS;\r\n}\r\n\r\nexport type TBurgerConstructorActions =\r\n  | IAddIngredient\r\n  | IDeleteIngredient\r\n  | IMoveIngredients\r\n  | clearIngredients;\r\n\r\nexport const addIngredient = (ingredient: TIngredientType) => {\r\n  return {\r\n    type: ADD_INGREDIENT,\r\n    payload: ingredient,\r\n  };\r\n};\r\n\r\nexport const deleteIngredient = (index: number) => {\r\n  return {\r\n    type: DELETE_INGREDIENT,\r\n    index: index,\r\n  };\r\n};\r\n\r\nexport const moveIngredients = (dragIndex: number, hoverIndex: number) => {\r\n  return {\r\n    type: MOVE_INGREDIENTS,\r\n    dragIndex: dragIndex,\r\n    hoverIndex: hoverIndex,\r\n  };\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/close-icon.3e080984.svg\";","import React from \"react\";\r\nimport modalOverlayStyles from \"./modal-overlay.module.css\";\r\n\r\nexport type TModalOverlayType = {\r\n  handleModalClose: Function;\r\n  children: React.ReactNode;\r\n};\r\n\r\nfunction ModalOverlay({ handleModalClose, children }: TModalOverlayType) {\r\n  return (\r\n    <div\r\n      id=\"overlay\"\r\n      onClick={() => handleModalClose()}\r\n      className={modalOverlayStyles.modaloverlay}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalOverlay;\r\n","import React, { useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport modalStyles from \"./modal.module.css\";\r\nimport closeIcon from \"../../images/close-icon.svg\";\r\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\r\n\r\nexport type TModalType = {\r\n  handleModalClose: Function;\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst modalRoot = document.getElementById(\"root-portal\") as HTMLElement;\r\n\r\nexport function Modal({ handleModalClose, children }: TModalType) {\r\n  const el = useRef(document.createElement(\"div\"));\r\n\r\n\r\n  React.useEffect(() => {\r\n    const onKeypress = (event: KeyboardEvent) => {\r\n      if (event.key === \"Escape\") {\r\n        handleModalClose();\r\n      }\r\n    };\r\n    const current = el.current;\r\n    modalRoot!.appendChild(current);\r\n    document.addEventListener(\"keydown\", onKeypress);\r\n    return (): void => {\r\n      document.removeEventListener(\"keydown\", onKeypress);\r\n      modalRoot!.removeChild(current);\r\n    };\r\n  }, [handleModalClose]);\r\n\r\n  return ReactDOM.createPortal(\r\n    <ModalOverlay handleModalClose={handleModalClose}>\r\n      <div\r\n        onClick={(event) => event.stopPropagation()}\r\n        className={modalStyles.modal}\r\n      >\r\n        <img\r\n          onClick={() => {\r\n            handleModalClose();\r\n          }}\r\n          className={modalStyles.closeicon}\r\n          src={closeIcon}\r\n          alt=\"close button\"\r\n          data-test-id={'modal-close-icon'}\r\n        />\r\n        {children}\r\n      </div>\r\n    </ModalOverlay>,\r\n    el.current\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","export default __webpack_public_path__ + \"static/media/done.cc5a59a7.gif\";","import { useMemo } from \"react\";\r\nimport { useSelector } from \"../../services/hooks\";\r\n\r\nimport orderDetailsStyles from \"./order-details.module.css\";\r\nimport doneGif from \"../../images/done.gif\";\r\n\r\nfunction OrderDetails() {\r\n  const { isLoading, orderNumber } = useSelector((store) => ({\r\n    isLoading: store.orderData.loading,\r\n    orderNumber: store.orderData.orderNumber,\r\n  }));\r\n\r\n  const content = useMemo(() => {\r\n    return isLoading ? (\r\n      <p className=\"text text_type_digits-medium mt-30\">Загрузка...</p>\r\n    ) : (\r\n      <p\r\n        className=\"text text_type_digits-large mt-30\"\r\n        data-test-id={'order-number'}\r\n      >\r\n        {orderNumber}\r\n      </p>\r\n    );\r\n  }, [orderNumber, isLoading]);\r\n\r\n  return (\r\n    <section\r\n      className={orderDetailsStyles.orderdetails}\r\n      data-test-id={'order-details-modal'}\r\n    >\r\n      {content}\r\n      <p className=\"text text_type_main-medium mt-8\">идентификатор заказа</p>\r\n      <img className=\"mt-15\" src={doneGif} alt=\"done!\" />\r\n      <p className=\"text text_type_main-default mt-15\">\r\n        Ваш заказ начали готовить\r\n      </p>\r\n      <p className=\"text text_type_main-default mt-2 mb-30\">\r\n        Дождитесь готовности на орбитальной станции\r\n      </p>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default OrderDetails;\r\n","export const GET_ORDER_NUMBER_REQUEST: \"GET_ORDER_NUMBER_REQUEST\" =\r\n  \"GET_ORDER_NUMBER_REQUEST\";\r\nexport const GET_ORDER_NUMBER_SUCCESS: \"GET_ORDER_NUMBER_SUCCESS\" =\r\n  \"GET_ORDER_NUMBER_SUCCESS\";\r\nexport const GET_ORDER_NUMBER_ERROR: \"GET_ORDER_NUMBER_ERROR\" =\r\n  \"GET_ORDER_NUMBER_ERROR\";\r\n","import { TAppThunk, TAppDispatch } from \"../types/index\";\r\nimport { getCookie } from \"../../utils/cookies\";\r\nimport { ENDPOINT } from \"../../utils/api\";\r\nimport { checkResponse } from \"../../utils/utils\";\r\n\r\nimport {\r\n  GET_ORDER_NUMBER_REQUEST,\r\n  GET_ORDER_NUMBER_SUCCESS,\r\n  GET_ORDER_NUMBER_ERROR,\r\n} from \"../constants/order-data\";\r\n\r\nimport { CLEAR_INGREDIENTS } from \"../constants/burger-constructor\";\r\n\r\nexport interface IGetOrderNumberRequest {\r\n  readonly type: typeof GET_ORDER_NUMBER_REQUEST;\r\n}\r\n\r\nexport interface IGetOrderNumberSuccess {\r\n  readonly type: typeof GET_ORDER_NUMBER_SUCCESS;\r\n  readonly payload: number;\r\n}\r\n\r\nexport interface IGetOrderNumberError {\r\n  readonly type: typeof GET_ORDER_NUMBER_ERROR;\r\n}\r\n\r\nexport type TOrderDataActions =\r\n  | IGetOrderNumberRequest\r\n  | IGetOrderNumberSuccess\r\n  | IGetOrderNumberError;\r\n\r\nconst getOrderNumberRequest = () => {\r\n  return {\r\n    type: GET_ORDER_NUMBER_REQUEST,\r\n  };\r\n};\r\n\r\nconst getOrderNumberSuccess = (orderNumber: number) => {\r\n  return {\r\n    type: GET_ORDER_NUMBER_SUCCESS,\r\n    payload: orderNumber,\r\n  };\r\n};\r\n\r\nexport const getOrderNumber: TAppThunk =\r\n  (bodyData: Array<string>) => (dispatch: TAppDispatch) => {\r\n    const accessToken = getCookie(\"acessToken\");\r\n\r\n    dispatch(getOrderNumberRequest());\r\n\r\n    fetch(`${ENDPOINT}/api/orders`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + accessToken,\r\n      },\r\n      body: JSON.stringify(bodyData),\r\n    })\r\n      .then((res) => checkResponse(res))\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        dispatch(getOrderNumberSuccess(data.order.number));\r\n        dispatch({ type: CLEAR_INGREDIENTS });\r\n      })\r\n      .catch((e) => {\r\n        dispatch({\r\n          type: GET_ORDER_NUMBER_ERROR,\r\n        });\r\n        console.log(\"Error: \" + e.message);\r\n        console.log(e.response);\r\n      });\r\n  };\r\n","export const SHOW_ORDER_DETAILS: \"SHOW_ORDER_DETAILS\" = \"SHOW_ORDER_DETAILS\";\r\nexport const HIDE_ORDER_DETAILS: \"HIDE_ORDER_DETAILS\" = \"HIDE_ORDER_DETAILS\";\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"../../services/hooks\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport { ConstructorElement } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Button } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { BurgerConstructorElement } from \"../burger-constructor-element/burger-constructor-element\";\r\nimport burgerConstructorStyles from \"./burger-constructor.module.css\";\r\nimport Modal from \"../modal/modal\";\r\nimport OrderDetails from \"../order-details/order-details\";\r\nimport { addIngredient } from \"../../services/actions/burger-constructor\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getOrderNumber } from \"../../services/actions/order-data\";\r\nimport { TIngredientType } from \"../../services/types/data\";\r\n\r\nimport {\r\n  showOrderDetails,\r\n  hideOrderDetails,\r\n} from \"../../services/actions/order-details\";\r\n\r\ntype TDropableIngredient = {\r\n  ingredient: TIngredientType;\r\n};\r\n\r\nconst BurgerConstructor = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [, dropTarget] = useDrop({\r\n    accept: \"ingredient\",\r\n    collect: (monitor) => ({\r\n      isHover: monitor.isOver(),\r\n    }),\r\n    drop(item: TDropableIngredient) {\r\n      dispatch(addIngredient(item.ingredient));\r\n    },\r\n  });\r\n\r\n  const { bun, sausesAndFillings, isOrderDetailsActive, isAuth } = useSelector(\r\n    (store) => ({\r\n      bun: store.burgerConstructor.bun,\r\n      sausesAndFillings: store.burgerConstructor.sausesAndFillings,\r\n      isOrderDetailsActive: store.orderDetails.isOrderDetailsActive,\r\n      isAuth: store.authData.isAuth,\r\n    })\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  function handleMakeOrderClick() {\r\n    if (!isAuth) {\r\n      history.replace({ pathname: \"/login\" });\r\n      return;\r\n    }\r\n\r\n    const chosenIngredientsData = [bun, ...sausesAndFillings];\r\n    const bodyData = {\r\n      ingredients: chosenIngredientsData.map((ingredientData) => {\r\n        if (ingredientData) return ingredientData._id;\r\n      }),\r\n    };\r\n    dispatch(getOrderNumber(bodyData));\r\n    dispatch(showOrderDetails());\r\n  }\r\n\r\n  function handleModalClose() {\r\n    dispatch(hideOrderDetails());\r\n  }\r\n\r\n  const bunTopIngredient = (\r\n    <div className={burgerConstructorStyles.element + ' pl-8'}>\r\n      {bun && bun.price && bun.image && (\r\n        <ConstructorElement\r\n          type=\"top\"\r\n          isLocked\r\n          text={bun.name + ' (верх)'}\r\n          price={bun.price}\r\n          thumbnail={bun.image}\r\n          data-test-id={bun._id}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const bunBottomIngredient = (\r\n    <div className={burgerConstructorStyles.element + \" pl-8\"}>\r\n      {bun && bun.price && bun.image && (\r\n        <ConstructorElement\r\n          type=\"bottom\"\r\n          isLocked\r\n          text={bun.name + \" (низ)\"}\r\n          price={bun.price}\r\n          thumbnail={bun.image}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const sausesAndFillingsIngredients = sausesAndFillings.map(\r\n    (chosenIngredient: TIngredientType, index: number) =>\r\n      chosenIngredient.name &&\r\n      chosenIngredient.price &&\r\n      chosenIngredient.image && (\r\n        <BurgerConstructorElement\r\n          name={chosenIngredient.name}\r\n          price={chosenIngredient.price}\r\n          image={chosenIngredient.image}\r\n          key={index}\r\n          index={index}\r\n        />\r\n      )\r\n  );\r\n\r\n  const bunPrice = bun && bun.price;\r\n  const innerPrice =\r\n    sausesAndFillings.length &&\r\n    sausesAndFillings\r\n      .map((elem: TIngredientType) => elem.price)\r\n      .reduce((sum: any, price: any) => sum + price);\r\n\r\n  const totalPrice = (innerPrice ? innerPrice : 0) + (bunPrice ? bunPrice : 0);\r\n\r\n  return (\r\n    <>\r\n      {isOrderDetailsActive && (\r\n        <Modal handleModalClose={handleModalClose}>\r\n          <OrderDetails />\r\n        </Modal>\r\n      )}\r\n\r\n      <div\r\n        className={burgerConstructorStyles.container + ' mt-25 ml-16'}\r\n        ref={dropTarget}\r\n        data-test-id={'burger-constructor'}\r\n      >\r\n        <>\r\n          {!bun || bunTopIngredient}\r\n\r\n          <div className={burgerConstructorStyles.ingredientsconstructor}>\r\n            {sausesAndFillingsIngredients}\r\n          </div>\r\n\r\n          {!bun || bunBottomIngredient}\r\n\r\n          {\r\n            <div\r\n              className={\r\n                burgerConstructorStyles.priceandconfirmation + ' mt-10 mb-10'\r\n              }\r\n            >\r\n              <p className=\"text text_type_digits-medium\">{totalPrice}</p>\r\n              <div className=\"mr-10\">\r\n                <CurrencyIcon type=\"primary\" />\r\n              </div>\r\n              <div className=\"mr-8\">\r\n                <Button\r\n                  onClick={handleMakeOrderClick}\r\n                  type=\"primary\"\r\n                  size=\"large\"\r\n                  data-test-id={'submit-order-button'}\r\n                >\r\n                  Оформить заказ\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          }\r\n        </>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BurgerConstructor;\r\n","import {\r\n  SHOW_ORDER_DETAILS,\r\n  HIDE_ORDER_DETAILS,\r\n} from \"../constants/order-details\";\r\n\r\nexport interface IHideOrderDetails {\r\n  readonly type: typeof HIDE_ORDER_DETAILS;\r\n}\r\n\r\nexport interface IShowOrderDetails {\r\n  readonly type: typeof SHOW_ORDER_DETAILS;\r\n}\r\n\r\nexport type TOrderDetailsActions = IHideOrderDetails | IShowOrderDetails;\r\n\r\nexport const hideOrderDetails = (): IHideOrderDetails => {\r\n  return {\r\n    type: HIDE_ORDER_DETAILS,\r\n  };\r\n};\r\n\r\nexport const showOrderDetails = (): IShowOrderDetails => {\r\n  return {\r\n    type: SHOW_ORDER_DETAILS,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\r\nimport { useSelector } from \"../../services/hooks\";\r\n\r\ntype TProtectedRoute = {\r\n  path: string;\r\n  children: React.ReactNode;\r\n  redirectTo: string;\r\n  forAuth: boolean;\r\n  addPermissionCondition?: boolean;\r\n};\r\nexport function ProtectedRoute({\r\n  path,\r\n  children,\r\n  redirectTo,\r\n  forAuth,\r\n  addPermissionCondition = true,\r\n}: TProtectedRoute) {\r\n  const { isAuth } = useSelector((store) => ({\r\n    isAuth: store.authData.isAuth,\r\n  }));\r\n\r\n  const location = useLocation();\r\n  const permissionFlag = (forAuth ? !isAuth : isAuth) && addPermissionCondition;\r\n  return (\r\n    <Route\r\n      render={() =>\r\n        permissionFlag ? (\r\n          children\r\n        ) : (\r\n          // Если пользователя нет в хранилище, происходит переадресация на роут /login\r\n          <Redirect\r\n            to={{\r\n              // Маршрут, на который произойдёт переадресация\r\n              pathname: redirectTo,\r\n              // В from сохраним текущий маршрут\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","export const GET_ORDER_INFO_REQUEST: \"GET_ORDER_INFO_REQUEST\" =\r\n  \"GET_ORDER_INFO_REQUEST\";\r\nexport const GET_ORDER_INFO_SUCCESS: \"GET_ORDER_INFO_SUCCESS\" =\r\n  \"GET_ORDER_INFO_SUCCESS\";\r\nexport const GET_ORDER_INFO_ERROR: \"GET_ORDER_INFO_ERROR\" =\r\n  \"GET_ORDER_INFO_ERROR\";\r\n","import orderCardDetailsStyles from \"./order-card-details.module.css\";\r\nimport { useSelector, useDispatch } from \"../../services/hooks\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { TIngredientType } from \"../../services/types/data\";\r\nimport { parseDay } from \"../../utils/utils\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport {\r\n  getOrder,\r\n  getUserOrder,\r\n} from \"../../services/actions/order-ingredients\";\r\n\r\nfunction OrderCardDetails() {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const feedRegex = new RegExp(\"/feed/\");\r\n  const orderRegex = new RegExp(\"/profile/\");\r\n\r\n  let { orderId } = useParams<{ orderId: string }>();\r\n\r\n  useEffect(() => {\r\n    if (feedRegex.test(location.pathname))\r\n      dispatch(getOrder(location.pathname.slice(6)));\r\n    if (orderRegex.test(location.pathname))\r\n      dispatch(getUserOrder(location.pathname.slice(16)));\r\n  }, [dispatch, orderId]);\r\n\r\n  const { order, ingredients } = useSelector((store) => ({\r\n    order: store.ws.modalOrder,\r\n    ingredients: store.burgerIngredients.ingredients,\r\n  }));\r\n\r\n  const orderIngredientData = [];\r\n  let totalPrice = 0;\r\n\r\n  if (order && ingredients.length && order.ingredients) {\r\n    let set = new Set(order.ingredients);\r\n    const uniqueIds = Array.from(set);\r\n    for (const uniqueId of uniqueIds) {\r\n      let amount = 0;\r\n      for (const orderIngredient of order.ingredients) {\r\n        if (orderIngredient === uniqueId) {\r\n          amount++;\r\n        }\r\n      }\r\n      orderIngredientData.push({ uniqueId, amount });\r\n      amount = 0;\r\n    }\r\n\r\n    totalPrice = order.ingredients\r\n      .map(\r\n        (ingredientsId: string) =>\r\n          ingredients.filter(\r\n            (ingredient: TIngredientType) => ingredientsId === ingredient._id\r\n          )[0].price\r\n      )\r\n      .reduce((acc: any, price: any) => acc && price && acc + price);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {order && ingredients.length && (\r\n        <section className={orderCardDetailsStyles.ingredientdetails + \" p-10\"}>\r\n          <h3\r\n            className={\r\n              orderCardDetailsStyles.header +\r\n              \" text text_type_digits-default mb-10 mt-5\"\r\n            }\r\n          >\r\n            {\"#\" + order.number}\r\n          </h3>\r\n          <h2\r\n            className={\r\n              orderCardDetailsStyles.header + \" text text_type_main-medium mb-3\"\r\n            }\r\n          >\r\n            {order.name}\r\n          </h2>\r\n          <p className=\"text text_type_main-default mb-15\">\r\n            {order.status === \"done\" ? \"Выполнен\" : \"Готовится\"}\r\n          </p>\r\n          <p className=\"text text_type_main-medium mb-6\">{\"Состав:\"}</p>\r\n          <div className={orderCardDetailsStyles.consist}>\r\n            {orderIngredientData.map((ingredientData) => (\r\n              <div className={orderCardDetailsStyles.ingredient} key={uuidv4()}>\r\n                <div className={orderCardDetailsStyles.ingredientContainer}>\r\n                  <div\r\n                    className={orderCardDetailsStyles.imageContainer + \" mr-6\"}\r\n                  >\r\n                    <img\r\n                      className={orderCardDetailsStyles.img}\r\n                      src={\r\n                        ingredients.filter(\r\n                          (ingredient) =>\r\n                            ingredient._id === ingredientData.uniqueId\r\n                        )[0].image\r\n                      }\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n\r\n                  <p className=\"text text_type_main-small mr-6\">\r\n                    {\r\n                      ingredients.filter(\r\n                        (ingredient) =>\r\n                          ingredient._id === ingredientData.uniqueId\r\n                      )[0].name\r\n                    }{\" \"}\r\n                  </p>\r\n                </div>\r\n                <div className={orderCardDetailsStyles.ingredientContainer}>\r\n                  <p className=\"text text_type_main-small mr-2\">\r\n                    {ingredientData.amount +\r\n                      \"x\" +\r\n                      ingredients.filter(\r\n                        (ingredient) =>\r\n                          ingredient._id === ingredientData.uniqueId\r\n                      )[0].price}\r\n                  </p>\r\n\r\n                  <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className={orderCardDetailsStyles.footer + \" mt-10\"}>\r\n            <p className=\"text text_type_main-default text_color_inactive\">\r\n              {parseDay(order.createdAt)}\r\n            </p>\r\n            <div className={orderCardDetailsStyles.price}>\r\n              <p>{totalPrice}</p>\r\n\r\n              <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n      \r\nexport default OrderCardDetails;\r\n","import {\r\n  GET_ORDER_INFO_REQUEST,\r\n  GET_ORDER_INFO_SUCCESS,\r\n  GET_ORDER_INFO_ERROR,\r\n} from \"../constants/order-ingredients\";\r\n\r\nimport { TAppThunk, TAppDispatch } from \"../types/index\";\r\nimport { getCookie } from \"../../utils/cookies\";\r\nimport { checkResponse } from \"../../utils/utils\";\r\nimport { ORDER_ENDPOINT } from \"../../utils/api\";\r\n\r\nexport type TOrderIngredientsActions =\r\n  | {\r\n      type: typeof GET_ORDER_INFO_REQUEST;\r\n    }\r\n  | {\r\n      type: typeof GET_ORDER_INFO_SUCCESS;\r\n      payload: any;\r\n    }\r\n  | {\r\n      type: typeof GET_ORDER_INFO_ERROR;\r\n    };\r\n\r\nexport const getOrder: TAppThunk =\r\n  (orderNumber) => (dispatch: TAppDispatch) => {\r\n    dispatch({\r\n      type: GET_ORDER_INFO_REQUEST,\r\n    });\r\n\r\n    fetch(`${ORDER_ENDPOINT}${orderNumber}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => checkResponse(res))\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        dispatch({\r\n          type: GET_ORDER_INFO_SUCCESS,\r\n          payload: data,\r\n        });\r\n      })\r\n\r\n      .catch((e) => {\r\n        if ((e.message = \"403\")) {\r\n          dispatch({\r\n            type: GET_ORDER_INFO_ERROR,\r\n          });\r\n          console.log(((e.message = \"403\"), \"GET_USER_INFO_ERROR\"));\r\n        }\r\n      });\r\n  };\r\n\r\nexport const getUserOrder: TAppThunk =\r\n  (orderNumber) => (dispatch: TAppDispatch) => {\r\n    dispatch({\r\n      type: GET_ORDER_INFO_REQUEST,\r\n    });\r\n\r\n    fetch(`${ORDER_ENDPOINT}${orderNumber}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + getCookie(\"acessToken\"),\r\n      },\r\n    })\r\n      .then((res) => checkResponse(res))\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        dispatch({\r\n          type: GET_ORDER_INFO_SUCCESS,\r\n          payload: data,\r\n        });\r\n      })\r\n\r\n      .catch((e) => {\r\n        if ((e.message = \"403\")) {\r\n          dispatch({\r\n            type: GET_ORDER_INFO_ERROR,\r\n          });\r\n          console.log(((e.message = \"403\"), \"GET_USER_INFO_ERROR\"));\r\n        }\r\n      });\r\n  };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"../../services/hooks\";\r\nimport {\r\n  Input,\r\n  Button,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport logInStyles from \"./log-in.module.css\";\r\nimport { authorization } from \"../../services/actions/auth\";\r\n\r\nfunction LogIn() {\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n    dispatch(\r\n      authorization({\r\n        email: email,\r\n        password: password,\r\n      })\r\n    );\r\n  };\r\n  /*\r\n  if (isAuth) {\r\n    return (\r\n      <Redirect\r\n        // Если объект state не является undefined, вернём пользователя назад.\r\n        to={location.state?.from.pathname || \"/\"}\r\n      />\r\n    );\r\n  }\r\n*/\r\n  return (\r\n    <form onSubmit={handleSubmit} className={logInStyles.logInContainer}>\r\n      <p className=\"text text_type_main-medium\">Вход</p>\r\n      <div className=\"mt-6\" data-test-id={'log-in__e-mail'}>\r\n        <Input\r\n          type={'text'}\r\n          placeholder={'E-mail'}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          value={email}\r\n          name={'email'}\r\n          error={false}\r\n          errorText={'Ошибка'}\r\n          size={'default'}\r\n        />\r\n      </div>\r\n      <div className=\"mt-6\" data-test-id={'log-in__password'}>\r\n        <Input\r\n          type={'text'}\r\n          placeholder={'Пароль'}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          icon={'ShowIcon'}\r\n          value={password}\r\n          name={'password'}\r\n          error={false}\r\n          errorText={'Ошибка'}\r\n          size={'default'}\r\n        />\r\n      </div>\r\n      <div className=\"mt-10\">\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Войти\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"mt-20\">\r\n        <p className=\"text text_type_main-default text_color_inactive\">\r\n          Вы новый пользователь?{' '}\r\n          <Link to=\"/registration\" className={logInStyles.anchor}>\r\n            Зарегистрироваться\r\n          </Link>\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"mt-4\">\r\n        <p className=\"text text_type_main-default text_color_inactive\">\r\n          Забыли пароль?{' '}\r\n          <Link to=\"/forgot-password\" className={logInStyles.anchor}>\r\n            Восстановить пароль\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"../../services/hooks\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Input,\r\n  Button,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { registration } from \"../../services/actions/auth\";\r\nimport registrationStyles from \"./registration.module.css\";\r\n\r\nfunction Registration() {\r\n  const [name, setName] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const isRegistrationSucess = useSelector(\r\n    (store) => store.authData.isRegistrationSucess\r\n  );\r\n\r\n  const handleSubmit = (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n    dispatch(\r\n      registration({\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n      })\r\n    );\r\n  };\r\n\r\n  if (isRegistrationSucess) history.replace({ pathname: \"/\" });\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      className={registrationStyles.registrationContainer}\r\n    >\r\n      <p className=\"text text_type_main-medium\">Вход</p>\r\n      <div className=\"mt-6\">\r\n        <Input\r\n          type={\"text\"}\r\n          placeholder={\"Имя\"}\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n          }}\r\n          value={name}\r\n          name={\"name\"}\r\n          error={false}\r\n          errorText={\"Ошибка\"}\r\n          size={\"default\"}\r\n        />\r\n      </div>\r\n      <div className=\"mt-6\">\r\n        <Input\r\n          type={\"text\"}\r\n          placeholder={\"E-mail\"}\r\n          onChange={(e) => {\r\n            setEmail(e.target.value);\r\n          }}\r\n          value={email}\r\n          name={\"email\"}\r\n          error={false}\r\n          errorText={\"Ошибка\"}\r\n          size={\"default\"}\r\n        />\r\n      </div>\r\n      <div className=\"mt-6\">\r\n        <Input\r\n          type={\"text\"}\r\n          placeholder={\"Пароль\"}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n          icon={\"ShowIcon\"}\r\n          value={password}\r\n          name={\"password\"}\r\n          error={false}\r\n          errorText={\"Ошибка\"}\r\n          size={\"default\"}\r\n        />\r\n      </div>\r\n      <div className=\"mt-10\">\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Зарегистрироваться\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"mt-20\">\r\n        <p className=\"text text_type_main-default text_color_inactive\">\r\n          Уже зарегистрированны?{\" \"}\r\n          <Link to=\"login\" className={registrationStyles.anchor}>\r\n            Войти\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Registration;\r\n","import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"../../services/hooks\";\r\nimport {\r\n  Input,\r\n  Button,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport passwordRecoveryStyles from \"./password-recovery.module.css\";\r\nimport { recoverPassword } from \"../../services/actions/auth\";\r\n\r\nfunction PasswordRecovery() {\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const isPasswordRecoverySucess = useSelector(\r\n    (store) => store.authData.isPasswordRecoverySucess\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n    if (\r\n      email\r\n        .toLowerCase()\r\n        .match(\r\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        )\r\n    ) {\r\n      dispatch(\r\n        recoverPassword({\r\n          email: email,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  if (isPasswordRecoverySucess) {\r\n    return (\r\n      <Redirect\r\n        // Если объект state не является undefined, вернём пользователя назад.\r\n        to=\"/password-updating\"\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      className={passwordRecoveryStyles.passwordRecoveryContainer}\r\n    >\r\n      <p className=\"text text_type_main-medium\">Восстановление пароля</p>\r\n      <div className=\"mt-6\">\r\n        <Input\r\n          type={\"text\"}\r\n          placeholder={\"Укажите e-mail\"}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          value={email}\r\n          name={\"email\"}\r\n          error={false}\r\n          errorText={\"Ошибка\"}\r\n          size={\"default\"}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"mt-10\">\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Восстановить\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"mt-20\">\r\n        <p className=\"text text_type_main-default text_color_inactive\">\r\n          Вспомнили пароль?{\" \"}\r\n          <Link to=\"login\" className={passwordRecoveryStyles.anchor}>\r\n            Войти\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default PasswordRecovery;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"../../services/hooks\";\r\nimport {\r\n  Input,\r\n  Button,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport passwordUpdatingStyles from \"./password-updating.module.css\";\r\nimport { updatePassword } from \"../../services/actions/auth\";\r\nfunction PasswordUpdating() {\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [token, setToken] = React.useState(\"\");\r\n  const inputRef = React.useRef<HTMLInputElement>(null);\r\n  const onIconClick = () => {\r\n    setTimeout(() => {\r\n      if (inputRef && inputRef.current) {\r\n        inputRef.current.focus();\r\n      }\r\n    }, 0);\r\n\r\n    alert(\"Icon Click Callback\");\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n    dispatch(\r\n      updatePassword({\r\n        password: password,\r\n        token: token,\r\n      })\r\n    );\r\n    history.replace({ pathname: \"/login\" });\r\n  };\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      className={passwordUpdatingStyles.passwordUpdatingContainer}\r\n    >\r\n      <p className=\"text text_type_main-medium\">Восстановление пароля</p>\r\n      <div className=\"mt-6\">\r\n        <Input\r\n          type={\"text\"}\r\n          placeholder={\"Введите новый пароль\"}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          icon={\"ShowIcon\"}\r\n          value={password}\r\n          name={\"password\"}\r\n          error={false}\r\n          ref={inputRef}\r\n          onIconClick={onIconClick}\r\n          errorText={\"Ошибка\"}\r\n          size={\"default\"}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"mt-6\">\r\n        <Input\r\n          type={\"text\"}\r\n          placeholder={\"Введите код из письма\"}\r\n          onChange={(e) => setToken(e.target.value)}\r\n          //icon={\"ShowIcon\"}\r\n          value={token}\r\n          name={\"token\"}\r\n          error={false}\r\n          ref={inputRef}\r\n          onIconClick={onIconClick}\r\n          errorText={\"Ошибка\"}\r\n          size={\"default\"}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"mt-10\">\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Сохранить\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"mt-20\">\r\n        <p className=\"text text_type_main-default text_color_inactive\">\r\n          Вспомнили пароль?{\" \"}\r\n          <Link to=\"login\" className={passwordUpdatingStyles.anchor}>\r\n            Войти\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default PasswordUpdating;\r\n","export const WS_CONNECTION_START: \"WS_CONNECTION_START\" = \"WS_CONNECTION_START\";\r\nexport const WS_CONNECTION_SUCCESS: \"WS_CONNECTION_SUCCESS\" =\r\n  \"WS_CONNECTION_SUCCESS\";\r\nexport const WS_CONNECTION_ERROR: \"WS_CONNECTION_ERROR\" = \"WS_CONNECTION_ERROR\";\r\nexport const WS_CONNECTION_CLOSED: \"WS_CONNECTION_CLOSED\" =\r\n  \"WS_CONNECTION_CLOSED\";\r\nexport const WS_GET_MESSAGE: \"WS_GET_MESSAGE\" = \"WS_GET_MESSAGE\";\r\nexport const WS_SEND_MESSAGE: \"WS_SEND_MESSAGE\" = \"WS_SEND_MESSAGE\";\r\nexport const WS_CONNECTION_CLOSE: \"WS_CONNECTION_CLOSE\" = \"WS_CONNECTION_CLOSE\";\r\n\r\n\r\n\r\n\r\n","import {\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_MESSAGE,\r\n  WS_SEND_MESSAGE,\r\n  WS_CONNECTION_CLOSE,\r\n} from \"../constants/ws\";\r\n\r\nexport type IwsInit = {\r\n  readonly type: typeof WS_CONNECTION_START;\r\n  readonly payload: string;\r\n};\r\nexport type IwsClose = {\r\n  readonly type: typeof WS_CONNECTION_CLOSE;\r\n};\r\nexport type IwsConnectionSuccess = {\r\n  readonly type: typeof WS_CONNECTION_SUCCESS;\r\n};\r\nexport type IwsConnectionError = {\r\n  readonly type: typeof WS_CONNECTION_ERROR;\r\n};\r\nexport type IwsConnectionClosed = {\r\n  readonly type: typeof WS_CONNECTION_CLOSED;\r\n  readonly payload: any;\r\n};\r\nexport type IwsGetMessage = {\r\n  readonly type: typeof WS_GET_MESSAGE;\r\n  readonly payload: string;\r\n};\r\nexport type IwsSendMessage = {\r\n  readonly type: typeof WS_SEND_MESSAGE;\r\n  readonly payload: string;\r\n};\r\n\r\nexport const wsInit = (url: string): IwsInit => {\r\n  return {\r\n    type: WS_CONNECTION_START,\r\n    payload: url,\r\n  };\r\n};\r\n\r\nexport const wsClose = (): IwsClose => {\r\n  return {\r\n    type: WS_CONNECTION_CLOSE,\r\n  };\r\n};\r\n\r\nexport const wsConnectionSuccess = (): IwsConnectionSuccess => {\r\n  return {\r\n    type: WS_CONNECTION_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const wsConnectionError = (): IwsConnectionError => {\r\n  return {\r\n    type: WS_CONNECTION_ERROR,\r\n  };\r\n};\r\n\r\nexport const wsConnectionClosed = (event: any): IwsConnectionClosed => {\r\n  return {\r\n    type: WS_CONNECTION_CLOSED,\r\n    payload: event,\r\n  };\r\n};\r\n\r\nexport const wsGetMessage = (message: string): IwsGetMessage => {\r\n  return {\r\n    type: WS_GET_MESSAGE,\r\n    payload: message,\r\n  };\r\n};\r\n\r\nexport const wsSendMessage = (message: string): IwsSendMessage => {\r\n  return {\r\n    type: WS_SEND_MESSAGE,\r\n    payload: message,\r\n  };\r\n};\r\n\r\n\r\nexport type TwsActions =\r\n  | IwsInit\r\n  | IwsClose\r\n  | IwsConnectionSuccess\r\n  | IwsConnectionError\r\n  | IwsConnectionClosed\r\n  | IwsGetMessage\r\n  | IwsSendMessage;\r\n\r\n\r\n  export type TwsThunkActions = {\r\n    wsInit: typeof WS_CONNECTION_START;\r\n    wsClose: typeof WS_CONNECTION_CLOSE;\r\n    wsSuccess: typeof WS_CONNECTION_SUCCESS;\r\n    wsError: typeof WS_CONNECTION_ERROR;\r\n    wsStart: typeof WS_CONNECTION_START;\r\n    wsClosed: typeof WS_CONNECTION_CLOSED;\r\n    wsGetMessage: typeof WS_GET_MESSAGE;\r\n  };\r\n\r\n  export const wsThunkActions = {\r\n    wsInit: WS_CONNECTION_START,\r\n    wsClose: WS_CONNECTION_CLOSE,\r\n    wsSuccess: WS_CONNECTION_SUCCESS,\r\n    wsError: WS_CONNECTION_ERROR,\r\n    wsStart: WS_CONNECTION_START,\r\n    wsClosed: WS_CONNECTION_CLOSED,\r\n    wsGetMessage: WS_GET_MESSAGE,\r\n  };\r\n\r\n  \r\n","import { useSelector } from \"../../services/hooks\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport type { TOrder } from \"../../services/types/data\";\r\nimport { parseDay } from \"../../utils/utils\";\r\nimport orderCardStyles from \"./order-card.module.css\";\r\nimport { TIngredientType } from \"../../services/types/data\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport type TOrderCard = {\r\n  id: number;\r\n  createdAt: string;\r\n  name: string;\r\n  ingredientsIds: Array<string>;\r\n};\r\n\r\nexport default function OrderCard({\r\n  id,\r\n  createdAt,\r\n  name,\r\n  ingredientsIds,\r\n}: TOrderCard) {\r\n  const { orderNumber, ingredients, ingredientsPrices } = useSelector(\r\n    (store) => ({\r\n      ingredients: store.burgerIngredients.ingredients,\r\n      ingredientsPrices: ingredientsIds.map(\r\n        (ingredientsId: string) =>\r\n          store.burgerIngredients.ingredients.filter(\r\n            (ingredient: TIngredientType) => ingredientsId === ingredient._id\r\n          )[0].price\r\n      ),\r\n      orderNumber: store.ws.orders.filter(\r\n        (order: TOrder) => order.number === Number(id)\r\n      )[0].number,\r\n    })\r\n  );\r\n\r\n  type orderIngredientImgData = {\r\n    img: string | undefined;\r\n    amount: number;\r\n  };\r\n\r\n  const orderIngredientImgData: Array<orderIngredientImgData> = [];\r\n\r\n  if (ingredientsIds && ingredients) {\r\n    let set = new Set(ingredientsIds);\r\n    const uniqueIds = Array.from(set);\r\n    for (const uniqueId of uniqueIds) {\r\n      let amount = 0;\r\n      for (const ingredientsId of ingredientsIds) {\r\n        if (ingredientsId === uniqueId) {\r\n          amount++;\r\n        }\r\n      }\r\n      const img = ingredients.filter(\r\n        (ingredient: TIngredientType) => uniqueId === ingredient._id\r\n      )[0].image;\r\n\r\n      orderIngredientImgData.push({ img, amount });\r\n      amount = 0;\r\n    }\r\n  }\r\n\r\n  const totalPrice = ingredientsPrices.reduce(\r\n    (acc, price) => acc && price && acc + price\r\n  );\r\n\r\n  interface LocationState {\r\n    from: {\r\n      pathname: string;\r\n    };\r\n  }\r\n\r\n  const location = useLocation<LocationState>();\r\n  const modalPathname =\r\n    location.pathname === \"/profile/orders\"\r\n      ? `/profile/orders/${id}`\r\n      : `/feed/${id}`;\r\n\r\n  return (\r\n    <section className={orderCardStyles.content}>\r\n      <Link\r\n        key={id}\r\n        to={{\r\n          // Тут мы формируем динамический путь для нашего ингредиента\r\n          // а также сохраняем в свойство background роут, на котором была открыта наша модалка.\r\n          pathname: modalPathname,\r\n          state: { background: location },\r\n        }}\r\n        //className={styles.link}\r\n      >\r\n        <div className={orderCardStyles.header + \" m-5\"}>\r\n          <p className=\"text text_type_digits-default\">#{orderNumber}</p>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            {parseDay(createdAt)}\r\n          </p>\r\n        </div>\r\n        <h2\r\n          className={orderCardStyles.name + \" m-5 text text_type_main-medium\"}\r\n        >\r\n          {name}\r\n        </h2>\r\n        <div className={orderCardStyles.info + \" m-5\"}>\r\n          <div className={orderCardStyles.images}>\r\n            {orderIngredientImgData.map((ingredientImg: any) => (\r\n              <div className={orderCardStyles.imageContainer} key={uuidv4()}>\r\n                <p\r\n                  className={\r\n                    orderCardStyles.amount + \" text text_type_main-medium\"\r\n                  }\r\n                >\r\n                  {ingredientImg.amount > 1 ? \"+\" + ingredientImg.amount : \"\"}\r\n                </p>\r\n                <img\r\n                  src={ingredientImg.img}\r\n                  alt=\"\"\r\n                  className={orderCardStyles.image}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className={orderCardStyles.price}>\r\n            <p>{totalPrice}</p>\r\n\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"../../services/hooks\";\r\nimport OrderCard from \"../../components/order-card/order-card\";\r\nimport orderContainerStyles from \"./order-container.module.css\";\r\n\r\nimport type { TOrder } from \"../../services/types/data\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nexport default function OrderContainer() {\r\n  const { orders } = useSelector((store) => ({\r\n    orders: store.ws.orders,\r\n  }));\r\n\r\n  const cards = () => {\r\n    return orders?.map(\r\n      (orderData: TOrder) =>\r\n        orderData.number && (\r\n          <OrderCard\r\n            id={orderData.number}\r\n            createdAt={orderData.createdAt}\r\n            name={orderData.name}\r\n            ingredientsIds={orderData.ingredients}\r\n            key={uuidv4()}\r\n          ></OrderCard>\r\n        )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={orderContainerStyles.contentColumn}>{cards()}</div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"../../services/hooks\";\r\nimport { wsInit, wsClose } from \"../../services/actions/wsActionTypes\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  Input,\r\n  Button,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport {\r\n  logout,\r\n  updateUserInfo,\r\n  refreshToken,\r\n} from \"../../services/actions/auth\";\r\nimport profileStyles from \"./profile.module.css\";\r\n\r\nimport OrderContainer from \"../../components/order-container/order-container\";\r\nfunction Profile() {\r\n  const {\r\n    storeUserEmail,\r\n    storeUserName,\r\n    updateUserInfoFailed,\r\n    refreshTokenSucess,\r\n  } = useSelector((store) => ({\r\n    storeUserEmail: store.authData.email,\r\n    storeUserName: store.authData.name,\r\n    updateUserInfoFailed: store.authData.updateUserInfoFailed,\r\n    refreshTokenSucess: store.authData.refreshTokenSucess,\r\n  }));\r\n  const [userEmail, setUserEmail] = useState(storeUserEmail);\r\n  const [userName, setUserName] = useState(storeUserName);\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n    dispatch(\r\n      updateUserInfo({\r\n        name: userName,\r\n        email: userEmail,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(wsInit(`profile`));\r\n\r\n    if (updateUserInfoFailed) {\r\n      dispatch(refreshToken(1));\r\n    }\r\n    return () => {\r\n      dispatch(wsClose());\r\n    };\r\n  }, [updateUserInfoFailed, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (refreshTokenSucess) {\r\n      dispatch(\r\n        updateUserInfo({\r\n          name: userName,\r\n          email: userEmail,\r\n        })\r\n      );\r\n    }\r\n  }, [refreshTokenSucess, userName, userEmail, dispatch]);\r\n\r\n  const handleCancel = () => {\r\n    setUserEmail(storeUserEmail);\r\n    setUserName(storeUserName);\r\n  };\r\n\r\n  const match = useRouteMatch();\r\n  return (\r\n    <div className={profileStyles.header + \" mt-25\"}>\r\n      <div className={profileStyles.header__container}>\r\n        <div className={profileStyles.navBar + \" pl-5 mr-5\"}>\r\n          <div className={profileStyles.navElement}>\r\n            <NavLink\r\n              exact\r\n              to={`/profile`}\r\n              className={\r\n                profileStyles.navElement + \" text text_type_main-medium\"\r\n              }\r\n              activeClassName={\r\n                profileStyles.activeNavElement + \" text text_type_main-medium\"\r\n              }\r\n            >\r\n              Профиль\r\n            </NavLink>\r\n          </div>\r\n          <div className={profileStyles.navElement}>\r\n            <NavLink\r\n              exact\r\n              to={`/profile/orders`}\r\n              //to=\"/profile/orders\"\r\n              className={\r\n                profileStyles.navElement + \" text text_type_main-medium\"\r\n              }\r\n              activeClassName={\r\n                profileStyles.activeNavElement + \" text text_type_main-medium\"\r\n              }\r\n            >\r\n              История заказов\r\n            </NavLink>\r\n          </div>\r\n          <div className={profileStyles.navElement}>\r\n            <NavLink\r\n              to=\"/profile\"\r\n              className={\r\n                profileStyles.navElement + \" text text_type_main-medium\"\r\n              }\r\n              onClick={() => dispatch(logout())}\r\n            >\r\n              Выход\r\n            </NavLink>\r\n          </div>\r\n\r\n          <p className=\"text text_type_main-default text_color_inactive mt-20\">\r\n            В этом разделе вы можете <br></br> изменить свои персональные данные\r\n          </p>\r\n        </div>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/profile/orders\">\r\n            <div className={profileStyles.orderContainer}>\r\n              <OrderContainer />\r\n            </div>\r\n          </Route>\r\n\r\n          <Route path={match.path}>\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"ml-30\">\r\n                <Input\r\n                  type={\"text\"}\r\n                  placeholder={\"Имя\"}\r\n                  onChange={(e) => setUserName(e.target.value)}\r\n                  icon={\"EditIcon\"}\r\n                  value={userName}\r\n                  name={\"name\"}\r\n                  error={false}\r\n                  //ref={inputRef}\r\n                  //onIconClick={onIconClick}\r\n                  errorText={\"Ошибка\"}\r\n                  size={\"default\"}\r\n                />\r\n                <div className=\"mt-6\">\r\n                  <Input\r\n                    type={\"text\"}\r\n                    placeholder={\"E-mail\"}\r\n                    onChange={(e) => setUserEmail(e.target.value)}\r\n                    icon={\"EditIcon\"}\r\n                    value={userEmail}\r\n                    name={\"name\"}\r\n                    error={false}\r\n                    //ref={inputRef}\r\n                    //onIconClick={onIconClick}\r\n                    errorText={\"Ошибка\"}\r\n                    size={\"default\"}\r\n                  />\r\n                </div>\r\n                <div className=\"mt-6\">\r\n                  <Input\r\n                    type={\"text\"}\r\n                    placeholder={\"Пароль\"}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    icon={\"CloseIcon\"}\r\n                    value={password}\r\n                    name={\"name\"}\r\n                    error={false}\r\n                    //ref={inputRef}\r\n                    //onIconClick={onIconClick}\r\n                    errorText={\"Ошибка\"}\r\n                    size={\"default\"}\r\n                  />\r\n                </div>\r\n                {userEmail !== storeUserEmail || userName !== storeUserName ? (\r\n                  <div className={profileStyles.profileButtons + \" mt-6\"}>\r\n                    <p\r\n                      className=\"text text_type_main-default text_color_inactive mr-7\"\r\n                      onClick={handleCancel}\r\n                    >\r\n                      Отмена\r\n                    </p>\r\n                    <Button type=\"primary\" size=\"medium\">\r\n                      Сохранить\r\n                    </Button>\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </form>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import ingredientDetailsStyles from \"./ingredient-details.module.css\";\r\nimport { useSelector } from \"../../services/hooks\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { TIngredientType } from \"../../services/types/data\";\r\n\r\nfunction IngredientDetails() {\r\n  let { ingredientId } = useParams<{ ingredientId: string }>();\r\n  ingredientId = ingredientId.slice(0, -1);\r\n  const ingredient = useSelector(\r\n    (store) =>\r\n      store.burgerIngredients.ingredients.filter(\r\n        (ingredient: TIngredientType) => ingredient._id === ingredientId\r\n      )[0]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {ingredient && (\r\n        <section className={ingredientDetailsStyles.ingredientdetails}>\r\n          <h2\r\n            className={\r\n              ingredientDetailsStyles.header +\r\n              \" text text_type_main-large mt-10 ml-10 mr-10\"\r\n            }\r\n          >\r\n            Детали ингредиента\r\n          </h2>\r\n          <div className={ingredientDetailsStyles.content}>\r\n            <img src={ingredient.image_large} alt=\"Тут картинка из props\" />\r\n            <p className=\"text text_type_main-medium mt-4\" data-test-id={'ingredient-name'}>{ingredient.name}</p>\r\n            <ul\r\n              className={\r\n                ingredientDetailsStyles.parameters +\r\n                \" text_color_inactive mt-8 mb-15\"\r\n              }\r\n            >\r\n              <li className={ingredientDetailsStyles.parameter}>\r\n                <p className=\"text text_type_main-small\">Каллории, ккал</p>\r\n                <p className=\"text text_type_digits-default mt-2\" data-test-id={'ingredient-calories'}>\r\n                  {ingredient.calories}\r\n                </p>\r\n              </li>\r\n              <li className={ingredientDetailsStyles.parameter}>\r\n                <p className=\"text text_type_main-small\">Белки, г</p>\r\n                <p className=\"text text_type_digits-default mt-2\" data-test-id={'ingredient-proteins'}>\r\n                  {ingredient.proteins}\r\n                </p>\r\n              </li>\r\n              <li className={ingredientDetailsStyles.parameter}>\r\n                <p className=\"text text_type_main-small\">Жиры, г</p>\r\n                <p className=\"text text_type_digits-default mt-2\" data-test-id={'ingredient-fat'}>\r\n                  {ingredient.fat}\r\n                </p>\r\n              </li>\r\n              <li className={ingredientDetailsStyles.parameter}>\r\n                <p className=\"text text_type_main-small\">Углеводы, г</p>\r\n                <p className=\"text text_type_digits-default mt-2\" data-test-id={'ingredient-carbohydrates'}>\r\n                  {ingredient.carbohydrates}\r\n                </p>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IngredientDetails;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"../../services/hooks\";\r\nimport { wsInit, wsClose } from \"../../services/actions/wsActionTypes\";\r\n\r\nimport OrderContainer from \"../../components/order-container/order-container\";\r\nimport AppHeader from \"../../components/app-header/app-header\";\r\nimport feedStyles from \"./feed.module.css\";\r\nimport type { TOrder } from \"../../services/types/data\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nexport default function Feed() {\r\n  const dispatch = useDispatch();\r\n  const { orders, isDoneToday, isDoneAllTime } = useSelector((store) => ({\r\n    orders: store.ws.orders,\r\n    isDoneToday: store.ws.messages[store.ws.messages.length - 1]?.totalToday,\r\n    isDoneAllTime: store.ws.messages[store.ws.messages.length - 1]?.total,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    dispatch(wsInit(`all`));\r\n    return () => {\r\n      dispatch(wsClose());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const readyOrderNumbers = () => {\r\n    return orders\r\n      ?.filter((order: TOrder) => order.status === \"done\")\r\n      .map((order: TOrder) => (\r\n        <p className=\"text text_type_digits-default mb-2 mr-4\" key={uuidv4()}>\r\n          {order.number}\r\n        </p>\r\n      ));\r\n  };\r\n\r\n  const inProgressOrderNumbers = () => {\r\n    return orders\r\n      ?.filter((order: TOrder) => order.status !== \"done\")\r\n      .map((order: TOrder) => (\r\n        <p className=\"text text_type_digits-default mb-2 mr-4\" key={uuidv4()}>\r\n          {order.number}\r\n        </p>\r\n      ));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppHeader />\r\n      <div className={feedStyles.content}>\r\n        <h1 className=\"text text_type_main-large mt-10 mb-5\">Лента заказов</h1>\r\n        <div className={feedStyles.container}>\r\n          <div className={feedStyles.contentleft}>\r\n            <OrderContainer></OrderContainer>\r\n          </div>\r\n          <div className={feedStyles.contentleft}>\r\n            <div className={feedStyles.status + \" mb-15\"}>\r\n              <div className={feedStyles.done}>\r\n                <h3 className=\"text text_type_main-medium mb-6\">Готовы:</h3>\r\n                <div className={feedStyles.statusContainer}>\r\n                  {readyOrderNumbers()}\r\n                </div>\r\n              </div>\r\n              <div className={feedStyles.inProgress}>\r\n                <div className={feedStyles.done}>\r\n                  <h3 className=\"text text_type_main-medium mb-6\">В работе:</h3>\r\n                  <div className={feedStyles.statusContainer}>\r\n                    {inProgressOrderNumbers()}\r\n                    <div className=\"mb-2\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <h2 className=\"text text_type_main-large\">\r\n              Выполнено за всё время:\r\n            </h2>\r\n            <p className=\"text text_type_digits-large mb-15\">{isDoneAllTime}</p>\r\n            <h2 className=\"text text_type_main-large\">Выполнено за сегодня:</h2>\r\n            <p className=\"text text_type_digits-large\">{isDoneToday}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import AppHeader from \"../app-header/app-header\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport BurgerIngredients from \"../burger-ingredients/burger-ingredients\";\r\nimport BurgerConstructor from \"../burger-constructor/burger-constructor\";\r\nimport { ProtectedRoute } from \"../protected-route/protected-route \";\r\nimport appStyles from \"./app.module.css\";\r\nimport { useSelector, useDispatch } from \"../../services/hooks\";\r\nimport OrderCardDetails from \"../order-card-details/order-card-details\";\r\nimport { Route, Switch, useLocation, useHistory } from \"react-router-dom\";\r\nimport { hideIngredientDetails } from \"../../services/actions/ingredient-details\";\r\n\r\nimport LogIn from \"../../pages/log-in/log-in\";\r\nimport Registration from \"../../pages/registration/registration\";\r\nimport PasswordRecovery from \"../../pages/password-recovery/password-recovery\";\r\nimport PasswordUpdating from \"../../pages/password-updating/password-updating\";\r\nimport Profile from \"../../pages/profile/profile\";\r\nimport IngredientsDetails from \"../ingredient-details/ingredient-details\";\r\nimport Modal from \"../modal/modal\";\r\n\r\nimport Feed from \"../../pages/feed/feed\";\r\n\r\ntype TLocationState = {\r\n  from: {\r\n    pathname: string;\r\n    search: string;\r\n    hash: string;\r\n    state: any;\r\n  };\r\n  background: {\r\n    pathname: string;\r\n    search: string;\r\n    hash: string;\r\n    state: any;\r\n  };\r\n};\r\n\r\nexport const ModalSwitch = () => {\r\n  const location = useLocation<TLocationState>();\r\n  const history = useHistory();\r\n  const background = location.state && location.state.background;\r\n  const dispatch = useDispatch();\r\n  const { isPasswordRecoverySucess } = useSelector((store) => ({\r\n    isPasswordRecoverySucess: store.authData.isPasswordRecoverySucess,\r\n  }));\r\n  const handleModalClose = () => {\r\n    dispatch(hideIngredientDetails());\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Switch location={background || location}>\r\n        <Route path=\"/ingredients/:ingredientId\" exact>\r\n          <AppHeader />\r\n          <IngredientsDetails />\r\n        </Route>\r\n\r\n        <ProtectedRoute\r\n          path=\"/profile/orders/:orderId\"\r\n          forAuth={false}\r\n          redirectTo={\"/login\"}\r\n        >\r\n          <AppHeader />\r\n          <div className={appStyles.modal}>\r\n            <OrderCardDetails />\r\n          </div>\r\n        </ProtectedRoute>\r\n\r\n        <Route path=\"/feed/:orderId\" exact>\r\n          <AppHeader />\r\n          <div className={appStyles.modal}>\r\n            <OrderCardDetails />\r\n          </div>\r\n        </Route>\r\n\r\n        <ProtectedRoute\r\n          path={\"/login\"}\r\n          forAuth={true}\r\n          redirectTo={\r\n            location.state &&\r\n            location.state.from &&\r\n            location.state.from.pathname\r\n              ? location.state.from.pathname\r\n              : \"/\"\r\n          }\r\n        >\r\n          <AppHeader />\r\n          <LogIn />\r\n        </ProtectedRoute>\r\n\r\n        <ProtectedRoute path=\"/registration\" forAuth={true} redirectTo={\"/\"}>\r\n          <AppHeader />\r\n          <Registration />\r\n        </ProtectedRoute>\r\n\r\n        <ProtectedRoute path=\"/forgot-password\" forAuth={true} redirectTo={\"/\"}>\r\n          <AppHeader />\r\n          <PasswordRecovery />\r\n        </ProtectedRoute>\r\n\r\n        <ProtectedRoute\r\n          path=\"/password-updating\"\r\n          forAuth={true}\r\n          redirectTo={\"/\"}\r\n          addPermissionCondition={isPasswordRecoverySucess}\r\n        >\r\n          <AppHeader />\r\n          <PasswordUpdating />\r\n        </ProtectedRoute>\r\n\r\n        <ProtectedRoute path=\"/profile\" forAuth={false} redirectTo={\"/login\"}>\r\n          <AppHeader />\r\n          <Profile />\r\n        </ProtectedRoute>\r\n\r\n        <Route path=\"/feed\">\r\n          <Feed />\r\n        </Route>\r\n\r\n        <Route path=\"/\">\r\n          <AppHeader />\r\n          <>\r\n            <DndProvider backend={HTML5Backend}>\r\n              <div className={appStyles.content}>\r\n                <div className={appStyles.contentleft}>\r\n                  <h1 className=\"text text_type_main-large mt-10 mb-5\">\r\n                    {\" \"}\r\n                    Соберите бургер\r\n                  </h1>\r\n                  <BurgerIngredients />\r\n                </div>\r\n                <div className={appStyles.contentleft}>\r\n                  <BurgerConstructor />\r\n                </div>\r\n              </div>\r\n            </DndProvider>\r\n          </>\r\n        </Route>\r\n      </Switch>\r\n\r\n      {background && (\r\n        <Route\r\n          path=\"/ingredients/:ingredientId\"\r\n          children={\r\n            <Modal handleModalClose={handleModalClose}>\r\n              <IngredientsDetails />\r\n            </Modal>\r\n          }\r\n        />\r\n      )}\r\n      {background && (\r\n        <Route\r\n          path=\"/feed/:orderId\"\r\n          children={\r\n            <Modal handleModalClose={handleModalClose}>\r\n              <OrderCardDetails />\r\n            </Modal>\r\n          }\r\n        />\r\n      )}\r\n      {background && (\r\n        <Route\r\n          path=\"/profile/orders/:orderId\"\r\n          children={\r\n            <Modal handleModalClose={handleModalClose}>\r\n              <OrderCardDetails />\r\n            </Modal>\r\n          }\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"../../services/hooks\";\r\nimport { getCookie } from \"../../utils/cookies\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { getBurgerIngredients } from \"../../services/actions/burger-ingredients\";\r\nimport { getUserInfo, refreshToken } from \"../../services/actions/auth\";\r\nimport { ModalSwitch } from \"../modal-switch/modal-switch\";\r\n\r\nexport default function App() {\r\n  const { getUserInfoFailed, refreshTokenSucess } = useSelector((store) => ({\r\n    getUserInfoFailed: store.authData.getUserInfoFailed,\r\n    refreshTokenSucess: store.authData.refreshTokenSucess,\r\n  }));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const accessToken = getCookie(\"acessToken\");\r\n\r\n  useEffect(() => {\r\n    dispatch(getBurgerIngredients());\r\n    if (accessToken) {\r\n      dispatch(getUserInfo());\r\n    }\r\n  }, [accessToken, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (getUserInfoFailed) {\r\n      dispatch(refreshToken(1));\r\n    }\r\n  }, [getUserInfoFailed, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (refreshTokenSucess) {\r\n      dispatch(getUserInfo());\r\n    }\r\n  }, [refreshTokenSucess, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <ModalSwitch />\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import type { Middleware, MiddlewareAPI } from \"redux\";\r\nimport { getCookie } from \"../../utils/cookies\";\r\n\r\nimport { TwsThunkActions } from \"../actions/wsActionTypes\";\r\n\r\nimport {\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_MESSAGE,\r\n  WS_SEND_MESSAGE,\r\n} from \"../constants/ws\";\r\n\r\nimport { WS_ENDPOINT } from \"../../utils/api\";\r\n\r\nexport const socketMiddleware = (\r\n  wsThunkActions: TwsThunkActions\r\n): Middleware => {\r\n  return ((store: MiddlewareAPI) => {\r\n    let socket: WebSocket | null = null;\r\n\r\n    return (next) => (action) => {\r\n      const { dispatch } = store;\r\n      if (action.type === wsThunkActions.wsInit) {\r\n        switch (action.payload) {\r\n          case \"all\":\r\n            socket = new WebSocket(`${WS_ENDPOINT}/all`);\r\n            break;\r\n          case \"profile\":\r\n            socket = new WebSocket(\r\n              `${WS_ENDPOINT}?token=${getCookie(\"acessToken\")}`\r\n            );\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      if (action.type === wsThunkActions.wsClose) {\r\n        // объект класса WebSocket\r\n        if (socket) {\r\n          socket.close();\r\n        }\r\n      }\r\n      if (socket) {\r\n        // функция, которая вызывается при открытии сокета\r\n        socket.onopen = () => {\r\n          dispatch({ type: wsThunkActions.wsSuccess });\r\n        };\r\n\r\n        // функция, которая вызывается при ошибке соединения\r\n        socket.onerror = () => {\r\n          dispatch({ type: wsThunkActions.wsError });\r\n        };\r\n\r\n        // функция, которая вызывается при получения события от сервера\r\n        socket.onmessage = (event) => {\r\n          const { data } = event;\r\n          dispatch({ type: wsThunkActions.wsGetMessage, payload: data });\r\n        };\r\n        // функция, которая вызывается при закрытии соединения\r\n        socket.onclose = (event) => {\r\n          dispatch({ type: wsThunkActions.wsClosed, payload: event });\r\n        };\r\n      }\r\n\r\n      next(action);\r\n    };\r\n  }) as Middleware;\r\n};\r\n","import { TIngredientType } from \"../types/data\";\r\nimport { TIngredientsActions } from \"../actions/burger-ingredients\";\r\nimport {\r\n  GET_INGREDIENTS_REQUEST,\r\n  GET_INGREDIENTS_SUCCESS,\r\n  GET_INGREDIENTS_ERROR,\r\n} from \"../constants/burger-ingredients\";\r\n\r\ntype TIngredientsState = {\r\n  loading: boolean;\r\n  ingredients: Array<TIngredientType>;\r\n  error: boolean;\r\n};\r\n\r\nconst ingredientsInitialState: TIngredientsState = {\r\n  loading: false,\r\n  ingredients: [],\r\n  error: false,\r\n};\r\n\r\nexport const ingredientsReducer = (\r\n  state = ingredientsInitialState,\r\n  action: TIngredientsActions\r\n) => {\r\n  switch (action.type) {\r\n    case GET_INGREDIENTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    }\r\n    case GET_INGREDIENTS_SUCCESS: {\r\n      return { ...state, ingredients: action.payload, loading: false };\r\n    }\r\n    case GET_INGREDIENTS_ERROR: {\r\n      return { ...ingredientsInitialState, error: true, loading: false };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import type { TIngredientDetailsActions } from \"../actions/ingredient-details\";\r\n\r\nimport {\r\n  SHOW_INGREDIENT_DETAILS,\r\n  HIDE_INGREDIENT_DETAILS,\r\n} from \"../constants/ingredient-details\";\r\n\r\ntype TIngredientDetailsState = {\r\n  iSIngredientDetailsActive: boolean;\r\n  ingredientDetailsId: string;\r\n};\r\n\r\nconst ingredientDetailsInitialState: TIngredientDetailsState = {\r\n  iSIngredientDetailsActive: false,\r\n  ingredientDetailsId: \"\",\r\n};\r\n\r\nexport const ingredientDetailsReducer = (\r\n  state = ingredientDetailsInitialState,\r\n  action: TIngredientDetailsActions\r\n) => {\r\n  switch (action.type) {\r\n    case SHOW_INGREDIENT_DETAILS: {\r\n      return {\r\n        ...state,\r\n        iSIngredientDetailsActive: true,\r\n        ingredientDetailsId: action.payload,\r\n      };\r\n    }\r\n    case HIDE_INGREDIENT_DETAILS: {\r\n      return {\r\n        ...state,\r\n        iSIngredientDetailsActive: false,\r\n        ingredientDetailsId: '',\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import type { TOrderDetailsActions } from \"../actions/order-details\";\r\n\r\nimport {\r\n  SHOW_ORDER_DETAILS,\r\n  HIDE_ORDER_DETAILS,\r\n} from \"../constants/order-details\";\r\n\r\ntype TOrderDetailsState = {\r\n  isOrderDetailsActive: boolean;\r\n};\r\n\r\nconst orderDetailsInitialState: TOrderDetailsState = {\r\n  isOrderDetailsActive: false,\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n  state = orderDetailsInitialState,\r\n  action: TOrderDetailsActions\r\n) => {\r\n  switch (action.type) {\r\n    case SHOW_ORDER_DETAILS: {\r\n      return {\r\n        ...state,\r\n        isOrderDetailsActive: true,\r\n      };\r\n    }\r\n    case HIDE_ORDER_DETAILS: {\r\n      return {\r\n        ...state,\r\n        isOrderDetailsActive: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import update from \"immutability-helper\";\r\nimport { TBurgerConstructorActions } from \"../actions/burger-constructor\";\r\nimport { TIngredientType } from \"../types/data\";\r\n\r\n\r\nimport {\r\n  ADD_INGREDIENT,\r\n  DELETE_INGREDIENT,\r\n  MOVE_INGREDIENTS,\r\n  CLEAR_INGREDIENTS,\r\n} from \"../constants/burger-constructor\";\r\n\r\ntype TBurgerConstructorState = {\r\n  bun: TIngredientType | null;\r\n  sausesAndFillings: Array<TIngredientType>;\r\n};\r\n\r\nexport const initialState: TBurgerConstructorState = {\r\n  bun: null,\r\n  sausesAndFillings: [],\r\n};\r\n\r\nexport const burgerConstructorReducer = (\r\n  state = initialState,\r\n  action: TBurgerConstructorActions\r\n) => {\r\n  switch (action.type) {\r\n    case ADD_INGREDIENT: {\r\n      if (action.payload.type === \"bun\") {\r\n        return {\r\n          ...state,\r\n          bun: action.payload,\r\n        };\r\n      } else\r\n        return {\r\n          ...state,\r\n          sausesAndFillings: [...state.sausesAndFillings, action.payload],\r\n        };\r\n    }\r\n\r\n    case DELETE_INGREDIENT: {\r\n      return {\r\n        ...state,\r\n        sausesAndFillings: update(state.sausesAndFillings, {\r\n          $splice: [[action.index, 1]],\r\n        }),\r\n      };\r\n    }\r\n\r\n    case MOVE_INGREDIENTS: {\r\n      const draggingIngredient = state.sausesAndFillings[action.dragIndex];\r\n      return {\r\n        ...state,\r\n        sausesAndFillings: update(state.sausesAndFillings, {\r\n          $splice: [\r\n            [action.dragIndex, 1],\r\n            [action.hoverIndex, 0, draggingIngredient],\r\n          ],\r\n        }),\r\n      };\r\n    }\r\n\r\n    case CLEAR_INGREDIENTS: {\r\n      return {\r\n        ...initialState,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import type { TOrderDataActions } from \"../actions/order-data\";\r\n\r\nimport {\r\n  GET_ORDER_NUMBER_REQUEST,\r\n  GET_ORDER_NUMBER_SUCCESS,\r\n  GET_ORDER_NUMBER_ERROR,\r\n} from \"../constants/order-data\";\r\n\r\ntype TOrderDataState = {\r\n  orderNumber: number;\r\n  loading: boolean;\r\n  error: boolean;\r\n};\r\n\r\nconst initialStateOrder: TOrderDataState = {\r\n  orderNumber: 0,\r\n  loading: false,\r\n  error: false,\r\n};\r\n\r\nexport const orderDataReducer = (\r\n  state = initialStateOrder,\r\n  action: TOrderDataActions\r\n) => {\r\n  switch (action.type) {\r\n    case GET_ORDER_NUMBER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    }\r\n\r\n    case GET_ORDER_NUMBER_SUCCESS: {\r\n      return { ...state, orderNumber: action.payload, loading: false };\r\n    }\r\n\r\n    case GET_ORDER_NUMBER_ERROR: {\r\n      return {\r\n        ...initialStateOrder,\r\n        error: true,\r\n        loading: false,\r\n        orderNumber: 0,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { setCookie, deleteCookie } from \"../../utils/cookies\";\r\nimport { TUserActions } from \"../actions/auth\";\r\nimport {\r\n  REGISTRATION_REQUEST,\r\n  REGISTRATION_SUCCESS,\r\n  REGISTRATION_ERROR,\r\n  AUTHORIZATION_REQUEST,\r\n  AUTHORIZATION_SUCCESS,\r\n  AUTHORIZATION_ERROR,\r\n  PASSWORD_RECOVERY_REQUEST,\r\n  PASSWORD_RECOVERY_SUCCESS,\r\n  PASSWORD_RECOVERY_ERROR,\r\n  PASSWORD_UPDATING_REQUEST,\r\n  PASSWORD_UPDATING_SUCCESS,\r\n  PASSWORD_UPDATING_ERROR,\r\n  LOGOUT_REQUEST,\r\n  LOGOUT_SUCCESS,\r\n  LOGOUT_ERROR,\r\n  GET_USER_INFO_REQUEST,\r\n  GET_USER_INFO_SUCCESS,\r\n  GET_USER_INFO_ERROR,\r\n  UPDATE_USER_INFO_REQUEST,\r\n  UPDATE_USER_INFO_SUCCESS,\r\n  UPDATE_USER_INFO_ERROR,\r\n  REFRESH_TOKEN_REQUEST,\r\n  REFRESH_TOKEN_SUCCESS,\r\n  REFRESH_TOKEN_ERROR,\r\n} from \"../constants/auth\";\r\n\r\ntype TUserState = {\r\n  isAuth: boolean;\r\n  email: string;\r\n  name: string;\r\n  accessToken: string;\r\n  accessTokenExpired: boolean;\r\n  requestToken: string;\r\n\r\n  isRegistrationInProcess: boolean;\r\n  isRegistrationSucess: boolean;\r\n  isRegistrationFailed: boolean;\r\n\r\n  isAuthorizationInProcess: boolean;\r\n  isAuthorizationSucess: boolean;\r\n  isAuthorizationFailed: boolean;\r\n\r\n  isPasswordRecoveryInProcess: boolean;\r\n  isPasswordRecoverySucess: boolean;\r\n  isPasswordRecoveryFailed: boolean;\r\n\r\n  isPasswordUpdatingInProcess: boolean;\r\n  isPasswordUpdatingSucess: boolean;\r\n  isPasswordUpdatingFailed: boolean;\r\n\r\n  getUserInfoInProcess: boolean;\r\n  getUserInfoSucess: boolean;\r\n  getUserInfoFailed: boolean;\r\n\r\n  updateUserInfoInProcess: boolean;\r\n  updateUserInfoSucess: boolean;\r\n  updateUserInfoFailed: boolean;\r\n\r\n  refreshTokenInProcess: boolean;\r\n  refreshTokenSucess: boolean;\r\n  refreshTokenFailed: boolean;\r\n};\r\n\r\nexport const userState: TUserState = {\r\n  isAuth: false,\r\n  email: '',\r\n  name: '',\r\n  accessToken: '',\r\n  accessTokenExpired: false,\r\n  requestToken: '',\r\n\r\n  isRegistrationInProcess: false,\r\n  isRegistrationSucess: false,\r\n  isRegistrationFailed: false,\r\n\r\n  isAuthorizationInProcess: false,\r\n  isAuthorizationSucess: false,\r\n  isAuthorizationFailed: false,\r\n\r\n  isPasswordRecoveryInProcess: false,\r\n  isPasswordRecoverySucess: false,\r\n  isPasswordRecoveryFailed: false,\r\n\r\n  isPasswordUpdatingInProcess: false,\r\n  isPasswordUpdatingSucess: false,\r\n  isPasswordUpdatingFailed: false,\r\n\r\n  getUserInfoInProcess: false,\r\n  getUserInfoSucess: false,\r\n  getUserInfoFailed: false,\r\n\r\n  updateUserInfoInProcess: false,\r\n  updateUserInfoSucess: false,\r\n  updateUserInfoFailed: false,\r\n\r\n  refreshTokenInProcess: false,\r\n  refreshTokenSucess: false,\r\n  refreshTokenFailed: false,\r\n};\r\n\r\nexport const authReducer = (state = userState, action: TUserActions) => {\r\n  switch (action.type) {\r\n    //---------------------------------------------------------------------------REGISTRATION-----------------------------\r\n    case REGISTRATION_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isRegistrationInProcess: true,\r\n      };\r\n    }\r\n    case REGISTRATION_SUCCESS: {\r\n      setCookie('acessToken', action.payload.accessToken.split('Bearer ')[1]);\r\n      setCookie('refreshToken', action.payload.refreshToken);\r\n      return {\r\n        ...state,\r\n        isAuth: true,\r\n        email: action.payload.user.email,\r\n        name: action.payload.user.name,\r\n        accessToken: action.payload.accessToken.split('Bearer ')[1],\r\n        refreshToken: action.payload.refreshToken,\r\n        isRegistrationInProcess: false,\r\n        isRegistrationSucess: true,\r\n      };\r\n    }\r\n    case REGISTRATION_ERROR: {\r\n      return {\r\n        ...state,\r\n        isAuth: false,\r\n        email: '',\r\n        name: '',\r\n        accessToken: '',\r\n        refreshToken: '',\r\n        isRegistrationFailed: true,\r\n        isRegistrationInProcess: false,\r\n      };\r\n    }\r\n    //---------------------------------------------------------------------------AUTHORIZATION-----------------------------\r\n    case AUTHORIZATION_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isAuthorizationInProcess: true,\r\n      };\r\n    }\r\n    case AUTHORIZATION_SUCCESS: {\r\n      setCookie('acessToken', action.payload.accessToken.split('Bearer ')[1]);\r\n      setCookie('refreshToken', action.payload.refreshToken);\r\n      return {\r\n        ...state,\r\n        isAuth: true,\r\n        email: action.payload.user.email,\r\n        name: action.payload.user.name,\r\n        accessToken: action.payload.accessToken.split('Bearer ')[1],\r\n        refreshToken: action.payload.refreshToken,\r\n        isAuthorizationInProcess: false,\r\n        isAuthorizationSucess: true,\r\n      };\r\n    }\r\n    case AUTHORIZATION_ERROR: {\r\n      return {\r\n        ...state,\r\n        isAuth: false,\r\n        email: '',\r\n        name: '',\r\n        accessToken: '',\r\n        refreshToken: '',\r\n        isAuthorizationInProcess: false,\r\n        isAuthorizationSucess: false,\r\n        isAuthorizationFailed: true,\r\n      };\r\n    }\r\n    //---------------------------------------------------------------------------PASSWORD_RECOVERY-----------------------------\r\n    case PASSWORD_RECOVERY_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isPasswordRecoveryInProcess: true,\r\n      };\r\n    }\r\n    case PASSWORD_RECOVERY_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isPasswordRecoverySucess: true,\r\n        isPasswordRecoveryInProcess: false,\r\n        isPasswordRecoveryFailed: false,\r\n      };\r\n    }\r\n    case PASSWORD_RECOVERY_ERROR: {\r\n      return {\r\n        ...state,\r\n        isPasswordRecoverySucess: false,\r\n        isPasswordRecoveryInProcess: false,\r\n        isPasswordRecoveryFailed: true,\r\n      };\r\n    }\r\n    //---------------------------------------------------------------------------PASSWORD_UPDATING-----------------------------\r\n    case PASSWORD_UPDATING_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isPasswordUpdatingInProcess: true,\r\n      };\r\n    }\r\n    case PASSWORD_UPDATING_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isPasswordUpdatingSucess: true,\r\n        isPasswordUpdatingInProcess: false,\r\n        isPasswordUpdatingFailed: false,\r\n      };\r\n    }\r\n    case PASSWORD_UPDATING_ERROR: {\r\n      return {\r\n        ...state,\r\n        isPasswordUpdatingSucess: false,\r\n        isPasswordUpdatingInProcess: false,\r\n        isPasswordUpdatingFailed: true,\r\n      };\r\n    }\r\n    //---------------------------------------------------------------------------LOGOUT-----------------------------\r\n    case LOGOUT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLogoutInProcess: true,\r\n      };\r\n    }\r\n    case LOGOUT_SUCCESS: {\r\n      deleteCookie('acessToken');\r\n      deleteCookie('refreshToken');\r\n      return {\r\n        ...userState,\r\n        isAuth: false,\r\n        isLogoutInProcess: false,\r\n        isLogoutFailed: false,\r\n        isLogoutSucess: true,\r\n      };\r\n    }\r\n    case LOGOUT_ERROR: {\r\n      return {\r\n        ...state,\r\n        isLogoutInProcess: false,\r\n        isLogoutFailed: true,\r\n        isLogoutSucess: false,\r\n      };\r\n    }\r\n    //---------------------------------------------------------------------------GET_USER_INFO-----------------------------\r\n    case GET_USER_INFO_REQUEST: {\r\n      return {\r\n        ...state,\r\n        getUserInfoInProcess: true,\r\n      };\r\n    }\r\n    case GET_USER_INFO_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isAuth: true,\r\n        getUserInfoInProcess: false,\r\n        getUserInfoFailed: false,\r\n        getUserInfoSucess: true,\r\n        email: action.payload.user.email,\r\n        name: action.payload.user.name,\r\n      };\r\n    }\r\n    case GET_USER_INFO_ERROR: {\r\n      return {\r\n        ...state,\r\n        isAuth: false,\r\n        getUserInfoSucess: false,\r\n        getUserInfoInProcess: false,\r\n        getUserInfoFailed: true,\r\n        accessTokenExpired: true,\r\n      };\r\n    }\r\n    //---------------------------------------------------------------------------UPDATE_USER_INFO-----------------------------\r\n    case UPDATE_USER_INFO_REQUEST: {\r\n      return {\r\n        ...state,\r\n        updateUserInfoInProcess: true,\r\n      };\r\n    }\r\n    case UPDATE_USER_INFO_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isAuth: true,\r\n        updateUserInfoInProcess: false,\r\n        updateUserInfoSucess: true,\r\n        updateUserInfoFailed: false,\r\n        email: action.payload.user.email,\r\n        name: action.payload.user.name,\r\n      };\r\n    }\r\n    case UPDATE_USER_INFO_ERROR: {\r\n      return {\r\n        ...state,\r\n        isAuth: false,\r\n        accessTokenExpired: true,\r\n        updateUserInfoInProcess: false,\r\n        updateUserInfoFailed: true,\r\n        updateUserInfoSucess: false,\r\n      };\r\n    }\r\n\r\n    //---------------------------------------------------------------------------UPDATE_TOKEN-----------------------------\r\n    case REFRESH_TOKEN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        refreshTokenInProcess: true,\r\n      };\r\n    }\r\n    case REFRESH_TOKEN_SUCCESS: {\r\n      setCookie('acessToken', action.payload.accessToken.split('Bearer ')[1]);\r\n      setCookie('refreshToken', action.payload.refreshToken);\r\n      return {\r\n        ...state,\r\n        refreshTokenInProcess: false,\r\n        refreshTokenSucess: true,\r\n        refreshTokenFailed: false,\r\n      };\r\n    }\r\n    case REFRESH_TOKEN_ERROR: {\r\n      return {\r\n        ...state,\r\n        refreshTokenInProcess: false,\r\n        refreshTokenSucess: false,\r\n        refreshTokenFailed: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};","import type { TwsActions } from \"../actions/wsActionTypes\";\r\nimport type { TOrderMessage, TOrders } from \"../types/data\";\r\nimport type { TOrderIngredientsActions } from \"../actions/order-ingredients\";\r\n\r\nimport {\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_MESSAGE,\r\n} from \"../constants/ws\";\r\n\r\nimport {\r\n  GET_ORDER_INFO_REQUEST,\r\n  GET_ORDER_INFO_SUCCESS,\r\n  GET_ORDER_INFO_ERROR,\r\n} from \"../constants/order-ingredients\";\r\n\r\ntype TWState = {\r\n  wsConnected: boolean;\r\n  messages: Array<TOrderMessage>;\r\n  orders: Array<TOrders>;\r\n  modalOrder: TOrders | null;\r\n  error?: any;\r\n  isOrderInfoGettingSuccess: boolean;\r\n  isOrderInfoGettingError: boolean;\r\n  isOrderInfoGettingInProcess: boolean;\r\n};\r\n\r\nexport const wsInitialState: TWState = {\r\n  wsConnected: false,\r\n  messages: [],\r\n  orders: [],\r\n  modalOrder: null,\r\n  isOrderInfoGettingSuccess: false,\r\n  isOrderInfoGettingError: false,\r\n  isOrderInfoGettingInProcess: false,\r\n};\r\n\r\nexport const wsReducer = (\r\n  state = wsInitialState,\r\n  action: TwsActions | TOrderIngredientsActions\r\n) => {\r\n  switch (action.type) {\r\n    case WS_CONNECTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: undefined,\r\n        wsConnected: true,\r\n      };\r\n\r\n    case WS_CONNECTION_ERROR:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n        wsConnected: false,\r\n      };\r\n\r\n    case WS_CONNECTION_CLOSED:\r\n      return {\r\n        ...state,\r\n        wsConnected: false,\r\n        messages: [],\r\n        orders: [],\r\n      };\r\n\r\n    case WS_GET_MESSAGE:\r\n      const parsedMessage = JSON.parse(action.payload);\r\n      if (parsedMessage.orders.length)\r\n        return {\r\n          ...state,\r\n          messages: [...state.messages, parsedMessage],\r\n          orders: parsedMessage.orders,\r\n        };\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, action.payload],\r\n      };\r\n\r\n    case GET_ORDER_INFO_REQUEST:\r\n      return {\r\n        ...state,\r\n        isOrderInfoGettingInProcess: true,\r\n      };\r\n    case GET_ORDER_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        modalOrder: action.payload.orders[0],\r\n        isOrderInfoGettingInProcess: false,\r\n        isOrderInfoGettingSuccess: true,\r\n        isOrderInfoGettingError: false,\r\n      };\r\n\r\n    case GET_ORDER_INFO_ERROR:\r\n      return {\r\n        ...state,\r\n        modalOrder: null,\r\n        isOrderInfoGettingInProcess: false,\r\n        isOrderInfoGettingSuccess: false,\r\n        isOrderInfoGettingError: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { ingredientsReducer } from \"./burger-ingredients\";\r\nimport { ingredientDetailsReducer } from \"./ingredient-details\";\r\nimport { orderDetailsReducer } from \"./order-details\";\r\nimport { burgerConstructorReducer } from \"./burger-constructor\";\r\nimport { orderDataReducer } from \"./order-data\";\r\nimport { authReducer } from \"./auth\";\r\nimport { wsReducer } from \"../reducers/wsReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  burgerIngredients: ingredientsReducer,\r\n  burgerConstructor: burgerConstructorReducer,\r\n  orderData: orderDataReducer,\r\n  ingredientDetails: ingredientDetailsReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  authData: authReducer,\r\n  ws: wsReducer,\r\n});\r\n","import { compose, createStore, applyMiddleware } from \"redux\";\r\nimport { socketMiddleware } from \"./middleware/socketMiddleware\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./reducers/index\";\r\nimport { wsThunkActions } from \"./actions/wsActionTypes\";\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(thunk, socketMiddleware(wsThunkActions))\r\n);\r\nexport const store = createStore(rootReducer, enhancer);\r\n\r\n///*?token=${getCookie(\"acessToken\")","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./services/store\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"feed_content__-S8PT\",\"container\":\"feed_container__3rb-r\",\"contentleft\":\"feed_contentleft__2qzg6\",\"status\":\"feed_status__wNY1W\",\"done\":\"feed_done__fwyHx\",\"statusContainer\":\"feed_statusContainer__2Oy4L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"order-card_header__WwPfv\",\"content\":\"order-card_content__11cz7\",\"name\":\"order-card_name__1dUeX\",\"info\":\"order-card_info__3WhpM\",\"images\":\"order-card_images__Sja_q\",\"imageContainer\":\"order-card_imageContainer__Uk7N1\",\"image\":\"order-card_image__34OVk\",\"amount\":\"order-card_amount__S4CWO\",\"price\":\"order-card_price__PzACS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"burger-ingredients_tab__yhNoF\",\"ingredients\":\"burger-ingredients_ingredients__36yF0\",\"ingredientconteinercontent\":\"burger-ingredients_ingredientconteinercontent__1981F\",\"linkinactive\":\"burger-ingredients_linkinactive__2F5aP\",\"linkactive\":\"burger-ingredients_linkactive__2Ur9E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientdetails\":\"ingredient-details_ingredientdetails__5batd\",\"header\":\"ingredient-details_header__1Hxlc\",\"content\":\"ingredient-details_content__Mk-uj\",\"parameters\":\"ingredient-details_parameters__3yvnH\",\"img\":\"ingredient-details_img__iyfS_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientsconstructor\":\"burger-constructor_ingredientsconstructor__3cyVm\",\"container\":\"burger-constructor_container__1WyhF\",\"element\":\"burger-constructor_element__265Ok\",\"priceandconfirmation\":\"burger-constructor_priceandconfirmation__1DhB2\",\"dragIcon\":\"burger-constructor_dragIcon__357Ap\",\"isHover\":\"burger-constructor_isHover__3Ovjf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"app_content__2cM15\",\"contentleft\":\"app_contentleft__1qo_q\",\"modal\":\"app_modal__27EzY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__1Urt1\",\"header__container\":\"app-header_header__container__2BD3y\",\"header__leftlinks\":\"app-header_header__leftlinks__15otb\",\"header__rightlinks\":\"app-header_header__rightlinks__q482H\",\"menu__item\":\"app-header_menu__item__3S4Pk\",\"menu__list-right\":\"app-header_menu__list-right__222Hm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ingredient-card_image__3bwhW\",\"ingredientcard__container\":\"ingredient-card_ingredientcard__container__WPIcD\",\"ingredientcard__description\":\"ingredient-card_ingredientcard__description__35mGy\",\"ingredientcard__price\":\"ingredient-card_ingredientcard__price__6BbXH\",\"onDrugging\":\"ingredient-card_onDrugging__2pBwb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientsconstructor\":\"burger-constructor-element_ingredientsconstructor__31NoT\",\"element\":\"burger-constructor-element_element__2_PH3\",\"dpopTarget\":\"burger-constructor-element_dpopTarget__2C2ov\",\"dragIcon\":\"burger-constructor-element_dragIcon__3lJ7d\",\"onDrugging\":\"burger-constructor-element_onDrugging__1p7ZF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationelement__link-active\":\"navigation-element_navigationelement__link-active__2mAWw\",\"navigationelement__link\":\"navigation-element_navigationelement__link__2TfxJ\",\"navElement\":\"navigation-element_navElement__MseLH\",\"navElementActive\":\"navigation-element_navElementActive__-T6f7\",\"navigationelement\":\"navigation-element_navigationelement__3f-Nh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logInContainer\":\"log-in_logInContainer__2ThCj\",\"anchor\":\"log-in_anchor__2dVvj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modaloverlay\":\"modal_modaloverlay__3YvCU\",\"modal\":\"modal_modal__1nEQH\",\"closeicon\":\"modal_closeicon__1u7Dc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationContainer\":\"registration_registrationContainer__1LOLS\",\"anchor\":\"registration_anchor__3DJcA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordRecoveryContainer\":\"password-recovery_passwordRecoveryContainer__1S75L\",\"anchor\":\"password-recovery_anchor__eDsow\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordUpdatingContainer\":\"password-updating_passwordUpdatingContainer__17mwh\",\"anchor\":\"password-updating_anchor__2e-RR\"};"],"sourceRoot":""}